%% cmssbx10ldf.mf
%% Created by Laurence D. Finston (LDF) Mon 10 Jan 2022 04:28:36 PM CET

%% !! RENAMED FROM cmssbx10.mf.  LDF 2022.01.10.

% THIS WAS [IS] THE OFFICIAL COMPUTER MODERN SOURCE FILE cmssbx10.mf BY D E KNUTH.
% IT MUST NOT BE MODIFIED IN ANY WAY UNLESS THE FILE NAME IS CHANGED!*
% * Changed.  See above.  LDF 2022.01.10.

% Computer Modern Sans Serif Bold Extended 10 pt



if unknown cmbase: input cmbaseldf fi

%% `font_size' is a macro.  It does nothing other than to set `designsize', 
%% which is an internal quantity (primitive).
%% LDF 2022.01.11.



boolean do_large;
do_large = true; % false

numeric factor;
%factor = 4.65; %% 4.65 works with 8000gf (dpdfezzz), 4.66 doesn't.  LDF 2022.01.11.
%factor = 4.66;

if known mode:
   factor = 15.5;  %% 15.5 works with 2400gf (supre), 16 doesn't.  LDF 2022.01.11.
else:
   factor = 1;
fi

font_identifier:="CMSSBX"; font_size (factor * 10pt#);

message "In cmssbx10ldf.mf:";
message "factor:"; 
show factor;

message "designsize:"; 
show designsize;
%readstring;

u#:=22/36pt#;               % unit width
width_adj#:=22/36pt#;       % width adjustment for certain characters
serif_fit#:=-9/36pt#;       % extra sidebar near lowercase serifs
cap_serif_fit#:=-11/36pt#;  % extra sidebar near uppercase serifs
letter_fit#:=0pt#;          % extra space added to all sidebars




body_height#:=270/36pt#; % height of tallest characters
asc_height#:=250/36pt#;  % height of lowercase ascenders
cap_height#:=250/36pt#;  % height of caps
fig_height#:=250/36pt#;  % height of numerals
x_height#:=165/36pt#;    % height of lowercase without ascenders


%% New.  LDF 2022.01.11.
if do_large:
   u#           := factor*u#;
   body_height# := factor*body_height#;
   asc_height#  := factor*asc_height#;
   cap_height#  := factor*cap_height#;
   fig_height#  := factor*fig_height#;
   x_height#    := factor*x_height#;
fi
%% End of new code.  LDF 2022.01.11.

math_axis#:=90/36pt#;     % axis of symmetry for math symbols
bar_height#:=90/36pt#;    % height of crossbar in lowercase e
comma_depth#:=38/36pt#;   % depth of comma below baseline
desc_depth#:=70/36pt#;    % depth of lowercase descenders

crisp#:=26/36pt#;           % diameter of serif corners
tiny#:=26/36pt#;            % diameter of rounded corners
fine#:=9/36pt#;             % diameter of sharply rounded corners
thin_join#:=9/36pt#;        % width of extrafine details
hair#:=49/36pt#;            % lowercase hairline breadth
stem#:=49/36pt#;            % lowercase stem breadth
curve#:=49/36pt#;           % lowercase curve breadth
ess#:=43/36pt#;             % breadth in middle of lowercase s
flare#:=40/36pt#;           % diameter of bulbs or breadth of terminals
dot_size#:=47/36pt#;        % diameter of dots
cap_hair#:=49/36pt#;        % uppercase hairline breadth
cap_stem#:=53/36pt#;        % uppercase stem breadth
cap_curve#:=53/36pt#;       % uppercase curve breadth
cap_ess#:=51/36pt#;         % breadth in middle of uppercase s
rule_thickness#:=30/36pt#;  % thickness of lines in math symbols

%% New.  LDF 2022.01.11.
if do_large:
   cap_stem# := factor*cap_stem#;    % uppercase stem breadth
   cap_hair# := factor*cap_hair#;     % uppercase hairline breadth
fi
%% End of new code.  LDF 2022.01.11.


dish#:=0pt#;              % amount erased at top or bottom of serifs
bracket#:=0pt#;           % vertical distance from serif base to tangent
jut#:=0pt#;               % protrusion of lowercase serifs
cap_jut#:=0pt#;           % protrusion of uppercase serifs
beak_jut#:=0pt#;          % horizontal protrusion of beak serifs
beak#:=1.5/36pt#;         % vertical protrusion of beak serifs
vair#:=26/36pt#;          % vertical diameter of hairlines
notch_cut#:=49/36pt#;     % maximum breadth above or below notches
bar#:=26/36pt#;           % lowercase bar thickness
slab#:=36/36pt#;          % serif and arm thickness
cap_bar#:=34/36pt#;       % uppercase bar thickness
cap_band#:=31/36pt#;      % uppercase thickness above/below lobes
cap_notch_cut#:=45/36pt#; % max breadth above/below uppercase notches
serif_drop#:=2/36pt#;     % vertical drop of sloped serifs
stem_corr#:=1/36pt#;      % for small refinements of stem breadth
vair_corr#:=2/36pt#;      % for small refinements of hairline height
apex_corr#:=18/36pt#;     % extra width at diagonal junctions

%% New.  LDF 2022.01.11.
if do_large:
   cap_bar#   	  := factor*cap_bar#;        % uppercase bar thickness
   cap_band#  	  := factor*cap_band#;       % uppercase thickness above/below lobes
   notch_cut# 	  := factor*notch_cut#;      % maximum breadth above or below notches
   cap_notch_cut# := factor*cap_notch_cut#; % max breadth above/below uppercase notches
fi
%% End of new code.  LDF 2022.01.11.

o#:=8/36pt#;        % amount of overshoot for curves
apex_o#:=0pt#;      % amount of overshoot for diagonal junctions

slant:=0;          % tilt ratio $(\Delta x/\Delta y)$
fudge:=.88;        % factor applied to weights of heavy characters
math_spread:=.5;   % extra openness of math symbols
superness:=3/4;    % parameter for superellipses
superpull:=1/18;   % extra openness inside bowls
beak_darkness:=0;  % fraction of triangle inside beak serifs
ligs:=2;           % level of ligatures to be included

square_dots:=true;    % should dots be square?
hefty:=true;          % should we try hard not to be overweight?
serifs:=false;        % should serifs and bulbs be attached?
monospace:=false;     % should all characters have the same width?
variant_g:=false;     % should an italic-style g be used?
low_asterisk:=false;  % should the asterisk be centered at the axis?
math_fitting:=false;  % should math-mode spacing be used?

%% Added.  LDF 2022.01.10.
%% Normally, `mode' should be set in the call to `mf' on the command line.
% mode := proofing;
% mode := dpdfezzz;
%% End of added code.  LDF 2022.01.10.






generate romanldf      % switch to the driver file
