%%%% sphrdoms1.ldf
%%%% Created by Laurence D. Finston (LDF) Thu 28 Oct 2021 12:21:29 AM CEST

%% * (1) Copyright and License.

%%%% This file is part of GNU 3DLDF, a package for three-dimensional drawing.  
%%%% Copyright (C) 2021 The Free Software Foundation  

%%%% GNU 3DLDF is free software; you can redistribute it and/or modify 
%%%% it under the terms of the GNU General Public License as published by 
%%%% the Free Software Foundation; either version 3 of the License, or 
%%%% (at your option) any later version.  

%%%% GNU 3DLDF is distributed in the hope that it will be useful, 
%%%% but WITHOUT ANY WARRANTY; without even the implied warranty of 
%%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
%%%% GNU General Public License for more details.  

%%%% You should have received a copy of the GNU General Public License 
%%%% along with GNU 3DLDF; if not, write to the Free Software 
%%%% Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA 

%%%% GNU 3DLDF is a GNU package.  
%%%% It is part of the GNU Project of the  
%%%% Free Software Foundation 
%%%% and is published under the GNU General Public License. 
%%%% See the website http://www.gnu.org 
%%%% for more information.   
%%%% GNU 3DLDF is available for downloading from 
%%%% http://www.gnu.org/software/3dldf/LDF.html.

%%%% Please send bug reports to Laurence.Finston@gmx.de
%%%% The mailing list help-3dldf@gnu.org is available for people to 
%%%% ask other users for help.  
%%%% The mailing list info-3dldf@gnu.org is for sending 
%%%% announcements to users. To subscribe to these mailing lists, send an 
%%%% email with ``subscribe <email-address>'' as the subject.  

%%%% The author can be contacted at: 

%%%% Laurence D. Finston 
%%%% c/o Free Software Foundation, Inc. 
%%%% 51 Franklin St, Fifth Floor 
%%%% Boston, MA  02110-1301  
%%%% USA

%%%% Laurence.Finston@gmx.de


% * (1) Beginning of 3DLDF code.

%% * (1) Spheres and domes (spherical biangles)

verbatim_metapost "boolean do_svg_output;\ndo_svg_output := true;\n";

input "sphrdoms.lmc";

%% ** (2) Set parameters

line_color  := dark_gray; % black;
label_color := black;

%% ** (2) Call macros

% def get_spherical_biangle (pp, vv, llabel_picture, dot_pen) {numeric rad, 
%                            	      	       		       numeric ra_divisions,
%                                                              numeric decl_divisions,
%                                     	       		       numeric draw_portion,
%                                     	       		       numeric tab_width
%                                     	       		       numeric tab_interval_zero,
%                                     	       		       numeric tab_interval_one,
%                                     	       		       numeric picture_ctr},


picture v[];
picture line_picture[];
picture label_picture[];

point p[][];

%% * (1) Spheres

%% ** (2) Sphere, 10cm Diameter

%% *** (3) With Lines


get_spherical_biangle (p, v, line_picture, label_picture, medium_pen) {5, 8, 16, 1, .5cm, 12, 12, 0};    

beginfig(0);
  v100 := v0;
  v100 += line_picture0;
  current_picture := v0;
  current_picture += line_picture0;
  shift v100 (5cm, 0);
  current_picture += v100;
  shift v100 (5cm, 0);
  current_picture += v100;
  shift v100 (5cm, 0);
  current_picture += v100;
endfig with_projection parallel_x_y no_sort;


%% ** (2)



verbatim_metapost "end";
  
end;

%% ** (2) End of 3DLDF code.

%% * (1) Emacs-Lisp code for use in indirect buffers when using the          
%%       GNU Emacs editor.  The local variable list is not evaluated when an 
%%       indirect buffer is visited, so it's necessary to evaluate the       
%%       following s-expression in order to use the facilities normally      
%%       accessed via the local variables list.                              
%%       \initials{LDF 2004.02.12}.                                          

%% (progn (metafont-mode) (outline-minor-mode t) (setq fill-column 80))    

%% * (1) Local variables for Emacs.

%% Local Variables:
%% mode:Metapost
%% eval:(outline-minor-mode t)
%% eval:(read-abbrev-file abbrev-file-name)
%% abbrev-mode:t
%% outline-regexp:"%% [*\f]+"
%% End:

