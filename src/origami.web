@q origami.web @>
@q Created by Laurence D. Finston, Do Feb  3 17:31:22 CET 2005 @>
 
@q * (1) Copyright and License.@>

@q This file is part of GNU 3DLDF, a package for three-dimensional drawing.  @>
@q Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, @>
@q 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021 The Free Software Foundation, Inc.  @>

@q GNU 3DLDF is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version.  @>

@q GNU 3DLDF is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details.  @>

@q You should have received a copy of the GNU General Public License @>
@q along with GNU 3DLDF; if not, write to the Free Software @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA@>

@q GNU 3DLDF is a GNU package.  @>
@q It is part of the GNU Project of the  @>
@q Free Software Foundation @>
@q and is published under the GNU General Public License. @>
@q See the website http://www.gnu.org @>
@q for more information.   @>
@q GNU 3DLDF is available for downloading from @>
@q http://www.gnu.org/software/3dldf/LDF.html.@>

@q ("@@" stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gmx.de@>
@q The mailing list help-3dldf@@gnu.org is available for people to @>
@q ask other users for help.  @>
@q The mailing list info-3dldf@@gnu.org is for sending @>
@q announcements to users. To subscribe to these mailing lists, send an @>
@q email with ``subscribe <email-address>'' as the subject.  @>

@q The author can be contacted at: @>

@q Laurence D. Finston                 @> 
@q c/o Free Software Foundation, Inc.  @>
@q 51 Franklin St, Fifth Floor         @> 
@q Boston, MA  02110-1301              @>
@q USA                                 @>

@q Laurence.Finston@@gmx.de (@@ stands for a single "at" sign.)@>

@q * (0) Origami Figures.@>       
@** Origami Figures\quad ({\tt origami\PERIOD web}).\hfil
\initials{LDF 2005.02.03.}

\LOG
\initials{LDF 2005.02.03.}
Created this file.
\ENDLOG

@f Origami_Figure Shape
@f Origami_Subfigure Shape

@q * (0) Include files. @>
@ Include files.
\initials{LDF 2005.02.03.}

@<Include files@>=
#include "loader.h++"
#include "pspglb.h++"
#include "io.h++"
#include "creatnew.h++"
#include "gsltmplt.h++"
#include "pntrvctr.h++"
#include "primes.h++"
#include "complex.h++"
#include "matrices.h++"
#include "colors.h++"
#include "transfor.h++"
#include "pens.h++"
#include "dashptrn.h++"
#include "shapes.h++" 
#include "pictures.h++"
#include "points.h++"
#include "lines.h++"
#include "planes.h++"
#include "paths.h++"
#include "curves.h++"
#include "polygons.h++"
#include "triangle.h++"
#include "rectangs.h++"
#include "conicsct.h++"
#include "ellipses.h++"
#include "circles.h++"
#include "ellpsslc.h++"
#include "crclslc.h++"
#include "parabola.h++"
#include "hyprbola.h++"
#include "cncsctlt.h++"
#include "arc.h++"
#include "helices.h++"

@q * (1) class Origami_Subfigure definition.@> 
@* {\bf class Origami\_Subfigure} definition.@> 
\initials{LDF 2005.02.03.}

\LOG
\initials{LDF 2005.02.03.}
Added this class definition.
\ENDLOG

@<Define |class Origami_Subfigure|@>=
class Origami_Subfigure : Path
{
   Point* normal;

   Origami_Figure* parent;      
   
};

@q * (1) class Origami_Figure definition.@> 
@* {\bf class Origami\_Figure} definition.@> 
\initials{LDF 2005.02.03.}

\LOG
\initials{LDF 2005.02.03.}
Added this class definition.
\ENDLOG

@<Define |class Origami_Figure|@>=
class Origami_Figure
{
   real thickness;
   Color* front_color;
   Color* back_color;

   Point* normal;      

   vector<Origami_Subfigure*> subfigures;
  
   public:

      @<Declare |Origami_Figure| functions@>@;

};

@q * (1) |Origami_Figure| functions.@> 
@* {\bf Origami\_Figure} functions.
\initials{LDF 2005.02.04.}

@q ** (2) Show.@> 
@* Show.
\initials{LDF 2005.02.04.}

\LOG
\initials{LDF 2005.02.04.}
Added this function.  Currently, it only prints the |string text| 
argument to |cerr|, or ``\.{Origami\_Figure}'', if |text| is 
the empty |string|.
\ENDLOG

@<Declare |Origami_Figure| functions@>=
virtual
void
show(string text = "");

@
@<Define |Origami_Figure| functions@>=
void
Origami_Figure::show(string text)
{
   if (text == "")
      text = "Origami_Figure:";

   cerr << text << endl;

}  /* End of the |Origami_Figure::show()| definition.  */

@q * (1) Putting Origami Figures together.@>
@* Putting Origami Figures together.
\initials{LDF 2005.02.03.}

@ This is what's compiled.
@c
@<Include files@>@;
@<Define |class Origami_Subfigure|@>@;
@<Define |class Origami_Figure|@>@;
@<Define |Origami_Figure| functions@>@;

@ This is what's written to \filename{origami.h}. 
@(origami.h@>=
@<Define |class Origami_Subfigure|@>@;
@<Define |class Origami_Figure|@>@;

@q * Emacs-Lisp code for use in indirect buffers when using the          @>
@q   GNU Emacs editor.  The local variable list is not evaluated when an @>
@q   indirect buffer is visited, so it's necessary to evaluate the       @>
@q   following s-expression in order to use the facilities normally      @>
@q   accessed via the local variables list.                              @>
@q   \initials{LDF 2004.02.12}.                                          @>
@q   (progn (cweb-mode) (outline-minor-mode t) (setq fill-column 80))    @>

@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q eval:(outline-minor-mode t)  @>
@q abbrev-file-name:"~/.abbrev_defs" @>
@q eval:(read-abbrev-file)  @>
@q fill-column:80 @>
@q run-cweave-on-file:"3DLDFprg.web"  @>
@q End: @>
