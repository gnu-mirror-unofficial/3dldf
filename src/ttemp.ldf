path p;

p := origin -- (1, 0) .. (2, 2) ... (3, 3) -- cycle;
show p;

end;

p := origin{curl 3} -- (1, 0) .. (2, 2) ... (3, 3);

show p;

end;



verbatim_metapost "prologues := 3;outputtemplate := \"%j%c.eps\";";

bool_point_vector bpv;

triangle q[];

set q0 with_points (origin, (10, 0), (5, 10));
shift q0 (-5, -5);



q1 := q0 rotated (0, 0, 50);



draw (-8, -8) -- (8, -8) -- (8, 8) -- (-8, 8) -- cycle;



%% This works.  LDF 2021.12.12.
%%
%% bpv := ((path) q0) intersection_points ((path) q1);

%% This also works.  LDF 2021.12.12.
%%
bpv := q0 intersection_points q1;


message "size bpv:";
show size bpv;

end;

beginfig(1);
  draw q0 with_color blue;
  draw q1 with_color red;

  for i = 0 upto (size bpv) - 1:
    dotlabel_if.top(decimal i, bpv[i]);
  endfor;
  
endfig with_projection parallel_x_y;

verbatim_metapost "end;";


end;

