def get_spherical_biangles {numeric rad, boolean ddo_labels} =

  circle c[];
  numeric a;
  numeric radius[];
  numeric circum[];
  path tab[];
  numeric n[];
  point ra_decl_zero_pt;
  numeric tab_wd;

  tab_wd := .25cm;
  
  radius0 := rad;

  ra_decl_zero_pt := (rad, 0);

  c0 := unit_circle scaled (radius0, 0, radius0) rotated (90, 0);
  a := circumference c0;   %% a == Circumference of horizontal great circle.

  %draw c0 with_color red;

  p0 := (-radius0, 0);
  p1 := (radius0, 0);

  %message "magnitude (p1 - p0) (diameter of c0):";
  %show magnitude (p1 - p0);

  %draw p0 -- p1;  %% Horizontal line through origin.

  if ddo_labels:
    %dotlabel.lft("$p_0$", p0);
    %dotlabel.rt("$p_1$", p1);
  fi;

  p2 := (0, -radius0);
  p3 := (0, radius0);

  %draw p2 -- p3;  %% Vertical line through origin.

  if ddo_labels:
    %dotlabel.bot("$p_2$", p2);
    %dotlabel.top("$p_3$", p3);
  fi;

  j := 4;
  for i = 11.25 step 11.25 until 78.75:
    p[j] := p1 rotated (0, 0, i);
    p[j + 1] := (0, ypart p[j]);
    %draw p[j + 1] -- p[j];
    if ddo_labels:
      %dotlabel.rt("$p_{" & decimal j & "}$", p[j]);
    fi;
    radius[j] := magnitude(p[j] - p[j + 1]);
    c[j] := unit_circle scaled (radius[j], 0, radius[j]);
    circum[j] := circumference c[j];
    biangle_width[j] := circum[j] / 8;
    %message "biangle_width[" & decimal j & "]:";
    %show biangle_width[j];
    j += 2;
  endfor;

%% **** (4)

  %draw c0 with_color red;

  edge0 := null_path; 
  edge1 := null_path; 
  edge2 := null_path;  
  edge3 := null_path;  

  edge0 += ..;
  edge1 += ..;
  edge2 += ..;
  edge3 += ..;

  n0 := a / 8;  %% 1/8 of circumference of c0 == width of spherical biangles at 0 deg. declination.
  n1 := a / 32; %% 1/32 of circumference of red circle == Distance between the declination lines in 
                %% increments of 11.25 deg.

  p20 := (-.5n0, 0);
  p21 := (.5n0, 0);

  label.rt("$0^\circ$", p21 shifted (1.5cm, 0));

  if ddo_labels:
    dotlabel.lft("$p_{20}$", p20);
    dotlabel.rt("$p_{21}$", p21);
  fi;

  edge0 += p20;
  edge1 += p21;

  p22 := (0, -.25a);
  p23 := (0, .25a);

  if ddo_labels:
    dotlabel.bot("$p_{22}$", p22);
    dotlabel.top("$p_{23}$", p23);
  fi;

  label.rt("$-90^\circ$", p22 shifted (.25cm, 0));
  label.rt("$90^\circ$", p23 shifted (.25cm, 0));

  j := 24;
  k := 4;
  for i = 1 step 1 until 7:
    p[j]     := (-.5biangle_width[k], (i * n1));
    p[j + 1] := (.5biangle_width[k], (i * n1));
    if ddo_labels:
      dotlabel.lft("$p_{" & decimal j & "}$", p[j]);
      dotlabel.rt("$p_{" & decimal (j + 1) & "}$", p[j + 1]);
    fi;

    if (11.25 * i) ==  floor (11.25 * i):
      label("$" & decimal (11.25 * i) & "^\circ$", p[j + 1] shifted (1.5cm, 0));
    elseif (11.25 * i) - floor (11.25 * i) == .25:
      label("$" & decimal (floor (11.25 * i)) & "^\circ 15^\prime$", p[j + 1] shifted (1.5cm, 0));
    elseif (11.25 * i) - floor (11.25 * i) == .5:
      label("$" & decimal (floor (11.25 * i)) & "^\circ 30^\prime$", p[j + 1] shifted (1.5cm, 0));
    elseif (11.25 * i) - floor (11.25 * i) == .75:
      label("$" & decimal (floor (11.25 * i)) & "^\circ 45^\prime$", p[j + 1] shifted (1.5cm, 0));
    fi;
    edge0 += p[j];
    edge1 += p[j + 1];

    j += 2;
    k += 2;
  endfor;

  if ddo_labels:
    dotlabel.lft("$p_{24}$", p24);
    dotlabel.rt("$p_{25}$", p25);
  fi;

  j := 1;

  for i := 24 step 2 until 37:
    p[20 + i] := p[i] rotated (180, 0);
    p[20 + 1 + i] := p[i + 1] rotated (180, 0);
    if ddo_labels:
      dotlabel.lft("$p_{" & decimal (20 + i) & "}$", p[20 + i]);
      dotlabel.rt("$p_{" & decimal (20 + i + 1) & "}$", p[20 + i + 1]);
    fi;

    if (11.25 * j) ==  floor (11.25 * j):
      label("$-" & decimal (11.25 * j) & "^\circ$", p[20 + i + 1] shifted (1.5cm, 0));
    elseif (11.25 * j) - floor (11.25 * j) == .25:
      label("$-" & decimal (floor (11.25 * j)) & "^\circ 15^\prime$", p[20 + i + 1] shifted (1.5cm, 0));
    elseif (11.25 * j) - floor (11.25 * j) == .5:
      label("$-" & decimal (floor (11.25 * j)) & "^\circ 30^\prime$", p[20 + i + 1] shifted (1.5cm, 0));
    elseif (11.25 * j) - floor (11.25 * j) == .75:
      label("$-" & decimal (floor (11.25 * j)) & "^\circ 45^\prime$", p[20 + i + 1] shifted (1.5cm, 0));
    fi;
    
    %label("$-" & decimal (11.25 * j) & "^\circ$", p[20 + i + 1] shifted (1.5cm, 0));
    j += 1;
  endfor;

  if false:
    draw p20 -- p21;
    draw (p20 -- p21) rotated (180, 0);
    draw p22 -- p23;
    draw p24 -- p25;
    draw (p24 -- p25) rotated (180, 0);
    draw p26 -- p27;
    draw (p26 -- p27) rotated (180, 0);
    draw p28 -- p29;
    draw (p28 -- p29) rotated (180, 0) ;
    draw p30 -- p31;
    draw (p30 -- p31) rotated (180, 0);
    draw p32 -- p33;
    draw (p32 -- p33) rotated (180, 0);
    draw p34 -- p35;
    draw (p34 -- p35) rotated (180, 0);
    draw p36 -- p37;
    draw (p36 -- p37) rotated (180, 0);
  fi;

  edge0 += p23;
  edge1 += p23;

  edge2 := edge0 rotated (180, 0);
  edge3 := edge1 rotated (180, 0);

  draw edge0 with_color dark_gray;
  draw edge1 with_color dark_gray;
  draw edge2 with_color dark_gray;
  draw edge3 with_color dark_gray;

  p38 := p23;

  p39 := p22; %% We need to use p22 in the following loop.
              %% It's original value is restored below.
              %% LDF 2021.08.30.

  p22 := p20;

  for i = 22 step 2 until 34:
    p100 := mediate(p[i], p[i+2], .5);
  %dotlabel.rt("$p_{100}$", p100) on_picture tab_picture;
    p101 := p100 shifted (0, 0, 1);
    p102 := p[i+2] rotated_around (p100, p101) 90;
    p103 := mediate(p100, p102, .6);
  %dotlabel.lft("$p_{103}$", p103) on_picture tab_picture;
    p104 := p[i] shifted by (p103 - p100);
    p105 := p[i+2] shifted by (p103 - p100);
  %dotlabel.lft("$p_{104}$", p104) on_picture tab_picture;
  %dotlabel.lft("$p_{105}$", p105) on_picture tab_picture;
    p106 := mediate(p103, p104, .6);
    p107 := mediate(p103, p105, .6);
  %dotlabel.lft("$p_{106}$", p106) on_picture tab_picture;
  %dotlabel.lft("$p_{107}$", p107) on_picture tab_picture;

    tab0 := p[i] -- p106 -- p107 -- p[i+2];
    draw tab0 on_picture tab_picture;
    draw tab0 rotated (180, 0) on_picture tab_picture;

  endfor;

  p22 := p39;  %% Restoring old value of p22.  LDF 2021.08.30.
    

  
 Q := edge0 .. (reverse edge1) .. edge3 .. (reverse edge2);

 Q += cycle;

 for i = 0 upto 7:
   bi_ang_pict[i] := current_picture;
   label("{\largebf " & decimal (i+1) & "}", p22 shifted (0, -.5cm)) on_picture bi_ang_pict[i];
 endfor;

 label("RA $22\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm)) bi_ang_pict[0];
 label("$0\rm{h}$",        p22 shifted (0, -1cm))      bi_ang_pict[0];
 label("$1\rm{h}\\thinspace 30^\prime$",     p22 shifted (1.25cm, -1cm)) bi_ang_pict[0];

 label("RA $1\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm))  bi_ang_pict[1];
 label("$3\rm{h}$",      p22 shifted (0, -1cm))       bi_ang_pict[1];
 label("$4\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm))  bi_ang_pict[1];

 label("RA $4\rm{h}\\thinspace 30^\prime$",  p22 shifted (-1.5cm, -1cm)) bi_ang_pict[2];
 label("$6\rm{h}$",       p22 shifted (0, -1cm))      bi_ang_pict[2];
 label("$7\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm)) bi_ang_pict[2];

 label("RA $7\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm)) bi_ang_pict[3];
 label("$8\rm{h}\prime$",      p22 shifted (0, -1cm))      bi_ang_pict[3];
 label("$10\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm)) bi_ang_pict[3];

 label("RA $10\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm)) bi_ang_pict[4];
 label("$12\rm{h}$",      p22 shifted (0, -1cm))      bi_ang_pict[4];
 label("$13\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm)) bi_ang_pict[4]; 

 label("RA $13\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm)) bi_ang_pict[5];
 label("$15\rm{h}$",      p22 shifted (0, -1cm))      bi_ang_pict[5];
 label("$16\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm)) bi_ang_pict[5];

 label("RA $16\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm)) bi_ang_pict[6];
 label("$18\rm{h}$",      p22 shifted (0, -1cm))      bi_ang_pict[6];
 label("$19\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm)) bi_ang_pict[6];

 label("RA $19\rm{h}\\thinspace 30^\prime$", p22 shifted (-1.5cm, -1cm)) bi_ang_pict[7];
 label("$21\rm{h}$",      p22 shifted (0, -1cm))      bi_ang_pict[7];
 label("$22\rm{h}\\thinspace 30^\prime$",    p22 shifted (1.25cm, -1cm)) bi_ang_pict[7];
 
 clear current_picture;
enddef;
