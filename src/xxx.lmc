macro draw_extra_label_on_flat_panel;

def draw_extra_label_on_flat_panel {star R, point S, numeric picture_ctr_one, numeric picture_ctr_two,
                                    numeric RA_one, numeric RA_two, numeric Decl,
                                    numeric shift_x, numeric shift_y, boolean do_labels} =

  point P[];

  string star_name;

  star_name := common_name R;
  
  for i = 0 upto 3:
    P[i] := get_point (i) flat_quadrant[RA_one][Decl];
  endfor;

  for i = 0 upto 3:
    P[i+4] := get_point (i) flat_quadrant[RA_two][Decl];
  endfor;

  if do_labels:
    dotlabel.lft("0", P0) on_picture flat_quadrant_picture[picture_ctr_one];
    dotlabel.rt("1", P1) on_picture flat_quadrant_picture[picture_ctr_one];
    dotlabel.rt("2", P2) on_picture flat_quadrant_picture[picture_ctr_one];
    dotlabel.lft("3", P3) on_picture flat_quadrant_picture[picture_ctr_one];

    dotlabel.lft("4", P4) on_picture flat_quadrant_picture[picture_ctr_two];
    dotlabel.rt("5", P5) on_picture flat_quadrant_picture[picture_ctr_two];
    dotlabel.rt("6", P6) on_picture flat_quadrant_picture[picture_ctr_two];
    dotlabel.lft("7", P7) on_picture flat_quadrant_picture[picture_ctr_two];
  fi;

  numeric temp_mag;


  P8 := S shifted (-1cm, 0);
  P9 := S shifted (1cm, 0);
  P10 := (P1 -- P2) intersection_point (P8 -- P9);

  temp_mag := xpart P10 - xpart S;

  P11 := (P4 -- P7) intersection_point (P8 -- P9);

%% !! START HERE: LDF 2021.08.04.  Figure out which sides of the biangles needs to be used
%% for the intersection points.
  
  if do_labels:
    dotlabel.ulft("$P_{11}$", P11) on_picture flat_quadrant_picture[picture_ctr_two];
  fi;

  P12 := P11 shifted (-2*temp_mag, 0);

% message "P9:";
% show P9;

  numeric app_mag;
  pen sstar_pen;

  app_mag := apparent_magnitude ruchbah;

  if app_mag < 0:
    sstar_pen := star_pen[-1];
  elseif app_mag < 1:
    sstar_pen := star_pen[0];
  elseif app_mag < 2:
    sstar_pen := star_pen[1];
  elseif app_mag < 3:
    sstar_pen := star_pen[2];
  elseif app_mag < 4:
    sstar_pen := star_pen[3];
  elseif app_mag < 5:
    sstar_pen := star_pen[4];
  else:
    sstar_pen := star_pen[5];
  fi;
  
  label.rt("{\small " & star_name & "}", P12 shifted (basic_shift_val, 0))
    on_picture flat_quadrant_picture[picture_ctr_two];
  drawdot P12 with_pen sstar_pen on_picture flat_quadrant_picture[picture_ctr_two];

enddef;
