%% ** (2) macro get_flat_panels

macro get_flat_panels;

def get_flat_panels =

  point p[];
  path q[];
  point r[];
  point W[];
  path u[];
  transform t[];
  numeric k;
  numeric m;
  numeric n[];
  numeric v;
  point temp_a;      
  point temp_b;
  point temp_c;

  path temp_path_a;
  path temp_path_b;

  path temp_path_c;
  path temp_path_d;

  pen stitch_pen;
  stitch_pen := pencircle scaled (2.5pt, 2.5pt, 2.5pt);

  pen large_pen;
  large_pen := pencircle scaled (3pt, 3pt, 3pt);
  
  boolean do_labels;

  do_labels := false; % true; % 

  color label_color;

  if do_black:
    label_color := white;
  else:
     label_color := black;
  fi;

  v := 0;
  
  k := 0;
  m := 0;

  for i = 0 upto 15:   % 15:
    t1 := identity shifted ((i * 5cm), 0);
    if i == 8:
      v := 1;
    fi;
    for j = 1 upto 7: 
      t0 := identity; 
      q[m] := D[i][j];    
      %draw q[m] on_picture flat_quadrant_picture[v];
      p[k] := get_point (3) q[m];
      if do_labels:
        dotlabel.top("$p_{" & decimal k & "}$", p[k]) on_picture flat_quadrant_picture[v];
      fi;
      p[k+1] := get_point (0) q[m];
      if do_labels:
        dotlabel.top("$p_{" & decimal (k+1) & "}$", p[k+1]) on_picture flat_quadrant_picture[v];
      fi;
      p[k+2] := get_point (1) q[m];
      if do_labels:
        dotlabel.top("$p_{" & decimal (k+2) & "}$", p[k+2]) on_picture flat_quadrant_picture[v];
      fi;
      p[k+3] := get_point (2) q[m];
      if do_labels:
        dotlabel.top("$p_{" & decimal (k+3) & "}$", p[k+3]) on_picture flat_quadrant_picture[v];
      fi;
      n0 := (p[k+2] - p[k]) angle (p[k+1] - p[k]);
      n1 := (p[k+3] - p[k]) angle (p[k+1] - p[k]);
      %message "n0:";
      %show n0;
      %message "n1:";
      %show n1;
      n2 := magnitude(p[k+1] - p[k]);
      n3 := magnitude(p[k+2] - p[k]);
      n4 := magnitude(p[k+3] - p[k]);
      %message "n2:";
      %show n2;
      %message "n3:";
      %show n3;
      %message "n4:";
      %show n4;

      p[k+4] := origin;
      p[k+5] := p[k+4] shifted (n2, 0);
      p[k+6] := (p[k+4] shifted (n3, 0)) rotated (0, 0, n0);
      p[k+7] := (p[k+4] shifted (n4, 0)) rotated (0, 0, n1); 

      q[m+1] := p[k+4] -- p[k+5] -- p[k+6] -- p[k+7] -- cycle;
      %message "q[" & decimal (m+1) & "]:";
      %show q[m+1];

      p[k+8] := mediate(p[k+4], p[k+5]);
      p[k+9] := mediate(p[k+6], p[k+7]);

      if j == 1:
        q[m+1] *= t1;

        % if v == 1:
        %   message "m+1 == " & decimal (m+1);
        %   pause;
        % fi;
        
        if do_black:
          fill q[m+1] with_color black on_picture flat_quadrant_picture[v];
          draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[v+2];

          fill q[m+1] with_color black on_picture flat_quadrant_picture[10 + i];
          draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
	  
        else:
          draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[v];
	  draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
        fi;
        if do_black:
          fill q[m+1] rotated (180, 0) with_color black on_picture flat_quadrant_picture[v];
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[v+2];

          fill q[m+1] rotated (180, 0) with_color black on_picture flat_quadrant_picture[10 + i];
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[10 + i];
	  
        else:
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[v];
	  draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[10 + i];
        fi;
        if j == 7:
          if do_labels:
            dotlabel.llft("$p_{" & decimal (k+4) & "}$", p[k+4]) on_picture flat_quadrant_picture[v];
	    dotlabel.lrt("$p_{" & decimal (k+5) & "}$", p[k+5]) on_picture flat_quadrant_picture[v];
	    dotlabel.urt("$p_{" & decimal (k+6) & "}$", p[k+6]) on_picture flat_quadrant_picture[v];
	    dotlabel.ulft("$p_{" & decimal (k+7) & "}$", p[k+7]) on_picture flat_quadrant_picture[v];
	    dotlabel.bot("$p_{" & decimal (k+8) & "}$", p[k+8]) on_picture flat_quadrant_picture[v];
	    dotlabel.top("$p_{" & decimal (k+9) & "}$", p[k+9]) on_picture flat_quadrant_picture[v];
          fi;
        fi;
      fi;
      
      if j > 1:
        p[k+10] := get_point (0) q[m-1];
        p[k+11] := get_point (1) q[m-1];
        p[k+12] := get_point (2) q[m-1];
        p[k+13] := get_point (3) q[m-1];
        p[k+14] := mediate(p[k+10], p[k+11], .5);
        p[k+15] := mediate(p[k+12], p[k+13], .5);
        n5 := magnitude(p[k+15] - p[k+14]);

        %t0 := identity shifted by (p[k-7] - p[k+14]);
        %t0 := identity shifted (0, ((j-1) * 2cm));
        t0 := identity shifted by (p[k+15]- p[k+8]);

        p[k+4] *= t0;
        p[k+5] *= t0;
        p[k+6] *= t0;
        p[k+7] *= t0;
        p[k+8] *= t0;
        p[k+9] *= t0;

        if j == 7:
          if do_labels:
            dotlabel.lft("$p_{" & decimal (k+4) & "}$", p[k+4]) on_picture flat_quadrant_picture[v];
            dotlabel.rt("$p_{" & decimal (k+5) & "}$", p[k+5]) on_picture flat_quadrant_picture[v];
            dotlabel.rt("$p_{" & decimal (k+6) & "}$", p[k+6]) on_picture flat_quadrant_picture[v];
            dotlabel.lft("$p_{" & decimal (k+7) & "}$", p[k+7]) on_picture flat_quadrant_picture[v];
            dotlabel.bot("$p_{" & decimal (k+8) & "}$", p[k+8]) on_picture flat_quadrant_picture[v];
            dotlabel.top("$p_{" & decimal (k+9) & "}$", p[k+9]) on_picture flat_quadrant_picture[v];
          fi;
        fi;

        q[m+1] *= t0;
        
        if do_black:
          fill q[m+1] with_color black on_picture flat_quadrant_picture[v];
          draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[v+2];
          fill q[m+1] rotated (180, 0) with_color black on_picture flat_quadrant_picture[v];
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[v+2];

	  fill q[m+1] with_color black on_picture flat_quadrant_picture[10 + i];
          draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
          fill q[m+1] rotated (180, 0) with_color black on_picture flat_quadrant_picture[10 + i];
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[10 + i];


	else:
          draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[v];
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[v];

	  draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
          draw q[m+1] rotated (180, 0) with_color dark_gray on_picture flat_quadrant_picture[10 + i];
	  
        fi;

        if j == 7:
          if do_labels:
            dotlabel.lft("$p_{" & decimal (k+10) & "}$", p[k+10]) on_picture flat_quadrant_picture[v];
            dotlabel.rt("$p_{"  & decimal (k+11) & "}$", p[k+11]) on_picture flat_quadrant_picture[v];
            dotlabel.rt("$p_{"  & decimal (k+12) & "}$", p[k+12]) on_picture flat_quadrant_picture[v];
            dotlabel.lft("$p_{" & decimal (k+13) & "}$", p[k+13]) on_picture flat_quadrant_picture[v];
            dotlabel.top("$p_{"  & decimal (k+14) & "}$", p[k+14]) on_picture flat_quadrant_picture[v];
            dotlabel.bot("$p_{"  & decimal (k+15) & "}$", p[k+15]) on_picture flat_quadrant_picture[v];
          fi;
        fi;
        
      fi;

      flat_quadrant[i][j] := q[m+1];
      flat_quadrant[i][-j] := q[m+1] rotated (180, 0);

      %draw ((get_point (0) flat_quadrant[i][j]) -- (get_point(2) flat_quadrant[i][j]);

      temp_a := mediate(get_point (0) flat_quadrant[i][j], get_point (1) flat_quadrant[i][j], .5);
      temp_b := mediate(get_point (2) flat_quadrant[i][j], get_point (3) flat_quadrant[i][j], .5);
      temp_c := mediate(temp_a, temp_b, .5) shifted (-1.75cm, 0);
      
      %draw flat_quadrant[i][j] with_color red with_pen medium_pen on_picture flat_quadrant_picture[v];
      %drawdot get_point (0) flat_quadrant[i][j] with_color red with_pen medium_pen
      %on_picture flat_quadrant_picture[v];
      %draw get_point (0) flat_quadrant[i][j] -- get_point (2) flat_quadrant[i][j]
      %with_color red with_pen medium_pen on_picture flat_quadrant_picture[v];
      %label(decimal i & "/" & decimal j, temp_c) on_picture flat_quadrant_picture[v];
      %label(decimal i & "/-" & decimal j, temp_c rotated (180, 0)) on_picture flat_quadrant_picture[v];
      
      k += 16;
      m += 2;
    endfor;
  endfor;

  v := 0;

  for i := 0 upto 15:
    if i == 8:
      v := 1;
    fi;

    q[m] := T[i][8];

    % message "m:";
    % show m;

    p[k] := get_point (0) q[m];
    p[k+1] := get_point (1) q[m];
    p[k+2] := get_point (2) q[m];

    n0 := magnitude (p[k+1] - p[k]);
    n1 := magnitude (p[k+2] - p[k]);
    n2 := (p[k+2] - p[k]) angle (p[k+1] - p[k]);

    p[k+3] := (n1, 0) rotated (0, 0, n2); 
    p[k+4] := (.5n0, 0);
    
    q[m+1] := origin -- (n0, 0) -- p[k+3] -- cycle; 

    t2 := identity shifted by (p[105 + (i * 112)] - p[k+4]);

    q[m+1] *= t2;

    q[m+2] := q[m+1] rotated (180, 0);

    if do_black:
      draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[v+2];
      fill q[m+1] with_color black on_picture flat_quadrant_picture[v];
      draw q[m+2] with_color dark_gray on_picture flat_quadrant_picture[v+2];
      fill q[m+2] with_color black on_picture flat_quadrant_picture[v];

      draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
      fill q[m+1] with_color black on_picture flat_quadrant_picture[10 + i];
      draw q[m+2] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
      fill q[m+2] with_color black on_picture flat_quadrant_picture[10 + i];

    else:
      draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[v];
      draw q[m+2] with_color dark_gray on_picture flat_quadrant_picture[v];

      draw q[m+1] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
      draw q[m+2] with_color dark_gray on_picture flat_quadrant_picture[10 + i];
      
    fi;
    
    flat_quadrant[i][8]  := q[m+1];
    flat_quadrant[i][-8] := q[m+2];
    k += 5;
    m += 3;
  endfor;
  
  point temp_pt;
  
  v := 0;
  j := 0;
  m := 226;
  for i = 0 upto 15:
    if i == 8:
      v := 1;
    fi;
    temp_pt := get_point (2) q[m];
    if j == floor j:
      label.lft("RA $" & decimal j & "\rm{h}$", temp_pt shifted (-.375cm, 0)) on_picture flat_quadrant_picture[v];
      label.rt("RA $" & decimal (floor (j + 1.5)) & "\rm{h}\\thinspace 30^\prime$",
	  temp_pt shifted (.375cm, 0)) on_picture flat_quadrant_picture[v];
    else:
      label.lft("RA $" & decimal (floor j) & "\rm{h}\\thinspace 30^\prime$",
	  temp_pt shifted (-.375cm, 0)) on_picture flat_quadrant_picture[v];
      label.rt("RA $" & decimal (floor (j + 1.5)) & "\rm{h}$",
	  temp_pt shifted (.375cm, 0)) on_picture flat_quadrant_picture[v];
    fi;      
    j += 1.5;
    m += 3;
  endfor;
  
  % drawdot get_point (2) q[229] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot get_point (2) q[232] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot get_point (2) q[235] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot get_point (2) q[238] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot get_point (2) q[241] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot get_point (2) q[244] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot get_point (2) q[247] with_color green with_pen Large_pen on_picture flat_quadrant_picture[0];

  % drawdot get_point (2) q[250] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[253] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[256] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[259] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[262] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[265] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[268] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  % drawdot get_point (2) q[271] with_color green with_pen Large_pen on_picture flat_quadrant_picture[1];
  
  r0 := p4;
  r1 := p5;
    
  % drawdot q[2] with_color red with_pen Large_pen on_picture flat_quadrant_picture[0];
  % drawdot q[2] with_color red with_pen Large_pen on_picture flat_quadrant_picture[0];

  if do_labels:
    dotlabel.lft("$r_0$", r0) on_picture flat_quadrant_picture[0];
    dotlabel.rt("$r_1$", r1) on_picture flat_quadrant_picture[0];
  fi;

  j := 2;
  for i := 1 step 2 until 13:
    %draw q[i] with_color cyan with_pen medium_pen on_picture flat_quadrant_picture[0];
    r[j]   := get_point (3) q[i];
    r[j+1] := get_point (2) q[i];
    if do_labels:
      dotlabel.lft("$r_{" & decimal j & "}$", r[j]) on_picture flat_quadrant_picture[0];
      dotlabel.rt("$r_{" & decimal (j+1) & "}$", r[j+1]) on_picture flat_quadrant_picture[0];
    fi;
    j += 2;
  endfor;

  %draw q225 with_color cyan with_pen medium_pen on_picture flat_quadrant_picture[0];

  r[17] := get_point (2) q[225];

  if do_labels:
     dotlabel.top("$r_{17}$", r17) on_picture flat_quadrant_picture[0];
  fi;

  for i = 0 step 2 until 12:
    r18 := mediate(r[i], r[i+2], .5);
    if do_labels:
      dotlabel.lft("$r_{18}$", r18) on_picture flat_quadrant_picture[0];
    fi;
    r19 := r18 shifted (0, 0, 1);
    r20 := (mediate(r[i], r[i+2], .75)) rotated_around (r18, r19) 90;
    if do_labels:
      dotlabel.lft("$r_{20}$", r20) on_picture flat_quadrant_picture[0];
    fi;
    r21 := mediate(r[i], r[i+2], .2);
    r22 := mediate(r[i+2], r[i], .2);
    if do_labels:
      dotlabel.rt("$r_{21}$", r21) on_picture flat_quadrant_picture[0];
    fi;
    if do_labels:
      dotlabel.rt("$r_{22}$", r22) on_picture flat_quadrant_picture[0];
    fi;
    r23 := r21 shifted by (r20 - r18);
    r24 := r22 shifted by (r20 - r18);
    r25 := mediate(r23, r24, .2);
    r26 := mediate(r24, r23, .2);
    if do_labels:
      dotlabel.lft("$r_{25}$", r25) on_picture flat_quadrant_picture[0];
      dotlabel.lft("$r_{26}$", r26) on_picture flat_quadrant_picture[0];
    fi;

    u0 := r21 -- r25 -- r26 -- r22;

    if do_labels:
      dotlabel.rt("$r_{21}$", r21) on_picture flat_quadrant_picture[0];
      dotlabel.lft("$r_{25}$", r25) on_picture flat_quadrant_picture[0];
      dotlabel.lft("$r_{26}$", r26) on_picture flat_quadrant_picture[0];
      dotlabel.rt("$r_{22}$", r22) on_picture flat_quadrant_picture[0];
    fi;
    
    r40 := mediate(r22, r26);
    r41 := mediate(r21, r25);

    r42 := mediate(r40, r41, .333);
    r43 := mediate(r40, r41, .667); 
    
    draw u0 on_picture flat_quadrant_picture[0];
    drawdot r42 with_pen stitch_pen on_picture flat_quadrant_picture[0];
    drawdot r43 with_pen stitch_pen on_picture flat_quadrant_picture[0];
    
    draw u0 rotated (180, 0) on_picture flat_quadrant_picture[0];

    drawdot r42 rotated (180, 0) with_pen stitch_pen on_picture flat_quadrant_picture[0];
    drawdot r43 rotated (180, 0) with_pen stitch_pen on_picture flat_quadrant_picture[0];

    t5 := identity shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]));
    
    draw u0 transformed t5 on_picture flat_quadrant_picture[1];

    drawdot r42 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[1];
    drawdot r43 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[1];

    t5 := identity shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]));
    t6 := identity rotated (180, 0);
    t6 *= t5;
    
    draw u0 transformed t6 on_picture flat_quadrant_picture[1];
    drawdot r42 transformed t6 with_pen stitch_pen on_picture flat_quadrant_picture[1];
    drawdot r43 transformed t6 with_pen stitch_pen on_picture flat_quadrant_picture[1];

    for i = 0 upto 7:
      t5 := identity shifted (i * 5cm, 0);
      t6 := identity rotated (180, 0);
      t6 *= t5;
      draw u0 transformed t5 on_picture flat_quadrant_picture[10 + i];
      draw u0 transformed t6 on_picture flat_quadrant_picture[10 + i];
      drawdot r42 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r43 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r42 transformed t6 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r43 transformed t6 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
    endfor;

    
    
    for i = 8 upto 15:

      t5 := identity shifted by
	(get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]));

      t6 := identity shifted ((i - 8) * 5cm, 0);

      t5 *= t6;
      
      draw u0 transformed t5 with_color blue with_pen large_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r42 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r43 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];

      t5 := identity rotated (180, 0);
      t6 := identity
	shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]));
      t7 := identity shifted ((i - 8) * 5cm, 0);
      t5 *= t6;
      t5 *= t7;
      draw u0 transformed t5 with_color red with_pen large_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r42 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
      drawdot r43 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[10 + i];
    endfor;
    
    u1 := u0;
    r44 := r42;
    r45 := r43;
    t3 := identity shifted (5cm, 0);
    
    for j = 1 upto 7:
      r45 *= r44 *= u1 *= t3;
      draw u1 on_picture flat_quadrant_picture[0];
      drawdot r44 with_pen stitch_pen on_picture flat_quadrant_picture[0];
      drawdot r45 with_pen stitch_pen on_picture flat_quadrant_picture[0];

      t5 := identity rotated (180, 0);      
      draw u1 transformed t5 on_picture flat_quadrant_picture[0];
      drawdot r44 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[0];
      drawdot r45 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[0];
      
      t5 := identity
	shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]));
      
      draw u1 transformed t5 on_picture flat_quadrant_picture[1];
      drawdot r44 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[1];
      drawdot r45 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[1];

      t5 := identity rotated (180, 0);
      t6 := identity shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]));
      t5 *= t6;
      
      draw u1 transformed t5 on_picture flat_quadrant_picture[1];
      drawdot r44 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[1];
      drawdot r45 transformed t5 with_pen stitch_pen on_picture flat_quadrant_picture[1];
      
    endfor;

    u1 := u0;
    
    %draw u0 on_picture flat_quadrant_picture[1];
    %draw u0 rotated (180, 0) on_picture flat_quadrant_picture[1];
    
    % for j = 0 upto 7:
    %   u1 *= t3;
    %   draw u1 on_picture flat_quadrant_picture[1];
    %   draw u1 rotated (180, 0) on_picture flat_quadrant_picture[1];
    % endfor;

  endfor;

  r27 := mediate(r14, r17, .2);
  r28 := mediate(r17, r14, .3);
  r29 := mediate(r27, r28, .5);
  r30 := r29 shifted (0, 0, 1);
  r31 := r28 rotated_around (r29, r30) 90;

  r32 := (.125cm * unit_vector(r31 - r29)) shifted r29;

  u2 := (r27 -- r28) shifted by (r32 - r29);
  u3 := r27 -- (r27 shifted by (r32 - r29));
  u4 := r28 -- (r28 shifted by (r32 - r29));

  t4 := identity shifted (5cm, 0);
  
  for i = 0 upto 7:
    draw u2 on_picture flat_quadrant_picture[0];
    draw u3 on_picture flat_quadrant_picture[0];
    draw u4 on_picture flat_quadrant_picture[0];
    draw u2 rotated (180, 0) on_picture flat_quadrant_picture[0];
    draw u3 rotated (180, 0) on_picture flat_quadrant_picture[0];
    draw u4 rotated (180, 0) on_picture flat_quadrant_picture[0];

    draw u2 shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]))
      on_picture flat_quadrant_picture[1];
    draw u3 shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]))
      on_picture flat_quadrant_picture[1];
    draw u4 shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1]))
      on_picture flat_quadrant_picture[1];

    draw (u2 shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1])))
      rotated (180, 0) on_picture flat_quadrant_picture[1];
    draw (u3 shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1])))
      rotated (180, 0) on_picture flat_quadrant_picture[1];
    draw (u4 shifted by (get_point (1) flat_quadrant[8][1] - (get_point (1) flat_quadrant[0][1])))
      rotated (180, 0) on_picture flat_quadrant_picture[1];

    u2 *= u3 *= u4 *= t4;
  endfor;

  if do_labels:
    dotlabel.rt("$r_{27}$", r27) on_picture flat_quadrant_picture[0];
    dotlabel.rt("$r_{28}$", r28) on_picture flat_quadrant_picture[0];
    dotlabel.rt("$r_{29}$", r29) on_picture flat_quadrant_picture[0];
    dotlabel.lft("$r_{32}$", r32) on_picture flat_quadrant_picture[0];
  fi;
  
  
  % draw flat_quadrant[8][1] with_color blue with_pen medium_pen on_picture flat_quadrant_picture[1];
  % draw flat_quadrant[8][2] with_color red with_pen medium_pen on_picture flat_quadrant_picture[1];
  % draw flat_quadrant[8][3] with_color green with_pen medium_pen on_picture flat_quadrant_picture[1];
  % draw flat_quadrant[8][4] with_color cyan with_pen medium_pen on_picture flat_quadrant_picture[1];
  %draw flat_quadrant[8][8] with_color cyan with_pen medium_pen on_picture flat_quadrant_picture[1];

  n10 := (r2 - r0) angle (r1 - r0);

  label.rt("$\scriptstyle 0\rm{h}$", mediate(r0, r2) shifted (-1pt, 0)) rotated (0, 0, n10)
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.rt("$\scriptstyle 1\rm{h}\\thinspace 30^\prime$", mediate(r0, r2) shifted (5cm - 1pt, 0))
    rotated (0, 0, n10)
     with_text_color label_color on_picture flat_quadrant_picture[2];
  label.rt("$\scriptstyle 3\rm{h}$", mediate(r0, r2) shifted ((2 * 5cm) - 1pt, 6pt)) rotated (0, 0, n10)
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.rt("$\scriptstyle 4\rm{h}\\thinspace 30^\prime$", mediate(r0, r2) shifted ((3 * 5cm) - 1.5pt, 0))
    rotated (0, 0, n10) with_text_color label_color on_picture flat_quadrant_picture[2];
  label.rt("$\scriptstyle 6\rm{h}$", mediate(r0, r2) shifted ((4 * 5cm) - 1pt, 0))
    rotated (0, 0, n10) with_text_color label_color on_picture flat_quadrant_picture[2];
  label.lrt("$\scriptstyle 7\rm{h}\\thinspace 30^\prime$", mediate(r0, r2) shifted ((5 * 5cm) + 0pt, -6pt))
    rotated (0, 0, n10) with_text_color label_color on_picture flat_quadrant_picture[2];
  label.rt("$\scriptstyle 9\rm{h}$", mediate(r0, r2) shifted ((6 * 5cm) - 1pt, 0))
    rotated (0, 0, n10) with_text_color label_color on_picture flat_quadrant_picture[2];
  label.rt("$\scriptstyle 10\rm{h}\\thinspace 30^\prime$", mediate(r0, r2) shifted ((7 * 5cm) - 1pt, 0))
    rotated (0, 0, n10) with_text_color label_color on_picture flat_quadrant_picture[2];

  n11 := ypart r2 - ypart r0;
  
  label.urt("$\scriptstyle 0^\circ$", r0) with_text_color label_color on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle 11^\circ 15^\prime$", r2) with_text_color label_color
    on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle -11^\circ 15^\prime$", r2 rotated_around(r0, r1) 180)
    with_text_color label_color
     on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle 22^\circ 30^\prime$", r4) with_text_color label_color
    on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle -22^\circ 30^\prime$", r4 rotated_around (r0, r1) 180)
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle 33^\circ 45^\prime$", r6) with_text_color label_color
    on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle -33^\circ 45^\prime$", r6 rotated_around (r0, r1) 180)
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle 45^\circ$", r8) with_text_color label_color
    on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle -45^\circ$", (r8 rotated_around (r0, r1) 180) shifted (0, -1pt))
     with_text_color label_color on_picture flat_quadrant_picture[2];
  label.ulft("$\scriptscriptstyle 56^\circ 15^\prime$", r11 shifted (0, 2.5pt))
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle -56^\circ 15^\prime$", r10 rotated_around (r0, r1) 180)
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle 67^\circ 30^\prime$", r12) with_text_color label_color
    on_picture flat_quadrant_picture[2];
  label.urt("$\scriptstyle -67^\circ 30^\prime$", (r12 rotated_around (r0, r1) 180) shifted (-2pt, 0))
     with_text_color label_color on_picture flat_quadrant_picture[2];
  label.top("$\scriptscriptstyle 78^\circ 45^\prime$",
      (mediate(r14, r15)) shifted (0, -1pt)) rotated (0, 0, 90)
    with_text_color label_color on_picture flat_quadrant_picture[2];
  label.bot("$\scriptscriptstyle -78^\circ 45^\prime$",
      (mediate(r14, r15) rotated_around (r0, r1) 180) shifted (0, 2pt))
    rotated (0, 0, 90) with_text_color label_color on_picture flat_quadrant_picture[2];

  %draw flat_quadrant[8][1] with_color cyan with_pen medium_pen with_text_color label_color
  %on_picture flat_quadrant_picture[3];

  j := 0;
  for i := 1 upto 8:
    r[33 + j] := get_point (0) flat_quadrant[8][i];
    r[33 + j + 1] := get_point (1) flat_quadrant[8][i];
    dotlabel.lft("$r_{" & decimal (33 + j) & "}$", r[33 + j]) with_text_color label_color
      on_picture flat_quadrant_picture[3];
    dotlabel.rt("$r_{" & decimal (33 + j + 1) & "}$", r[33 + j + 1]) with_text_color label_color
       on_picture flat_quadrant_picture[3];
    j += 2;
  endfor;

  r49 := get_point (2) flat_quadrant[8][8];
  dotlabel.rt("$r_{49}$", r49) with_text_color label_color on_picture flat_quadrant_picture[3];

  n12 := (r35 - r33) angle (r34 - r33);

  label.rt("$\scriptstyle 12\rm{h}$", mediate(r33, r35) shifted (-1pt, 0)) rotated (0, 0, n12)
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 13\rm{h}\\thinspace 30^\prime$",
      mediate(r33, r35) shifted (5cm - 1pt, 0)) rotated (0, 0, n12)
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 15\rm{h}$", mediate(r33, r35) shifted ((2 * 5cm) - 1pt, 0)) rotated (0, 0, n12)
    with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 16\rm{h}\\thinspace 30^\prime$",
      mediate(r33, r35) shifted ((3 * 5cm) - 1pt, 0)) rotated (0, 0, n12)
    with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 18\rm{h}$", mediate(r33, r35) shifted ((4 * 5cm) - 1pt, 0)) rotated (0, 0, n12)
    with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 19\rm{h}\\thinspace 30^\prime$",
      mediate(r33, r35) shifted ((5 * 5cm) - 1pt, 0)) rotated (0, 0, n12)
    with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 21\rm{h}$", mediate(r33, r35) shifted ((6 * 5cm) - 1pt, 0)) rotated (0, 0, n12)
    with_text_color label_color on_picture flat_quadrant_picture[3];
  label.rt("$\scriptstyle 22\rm{h}\\thinspace 30^\prime$",
      mediate(r33, r35) shifted ((7 * 5cm) - 1pt, 0)) rotated (0, 0, n12)
    with_text_color label_color on_picture flat_quadrant_picture[3];

  label.urt("$\scriptstyle 0^\circ$", r33) with_text_color label_color
    on_picture flat_quadrant_picture[3];
  label.urt("$\\scriptscriptstyle 11^\circ 15^\prime$", r35) with_text_color label_color
    on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle -11^\circ 15^\prime$", r35 rotated_around (r33, r34) 180)
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle 22^\circ 30^\prime$", r37) with_text_color label_color
    on_picture flat_quadrant_picture[3];
  label.bot("$\scriptscriptstyle -22^\circ 30^\prime$",
     (mediate(r37, r38) rotated_around (r33, r34) 180) shifted (.5cm - 4pt, 1pt))
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle 33^\circ 45^\prime$", r39) with_text_color label_color
    on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle -33^\circ 45^\prime$", r39 rotated_around (r33, r34) 180)
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle 45^\circ$", r41) with_text_color label_color
    on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle -45^\circ$", (r41 rotated_around (r33, r34) 180) shifted (0, -1pt))
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.lrt("$\scriptscriptstyle 56^\circ 15^\prime$", r43 shifted (-1pt, 0))
     with_text_color label_color on_picture flat_quadrant_picture[3];
  %label.urt("$\scriptstyle -56^\circ 15^\prime$", r43 rotated_around (r33, r34) 180)
  %   with_text_color label_color on_picture flat_quadrant_picture[3];
  label.urt("$\scriptstyle 67^\circ 30^\prime$", r45) with_text_color label_color
    on_picture flat_quadrant_picture[3];
  %label.urt("$\scriptstyle -67^\circ 30^\prime$", (r45 rotated_around (r33, r34) 180) shifted (-2pt, 0))
  %   with_text_color label_color on_picture flat_quadrant_picture[3];
  label.top("$\scriptscriptstyle 78^\circ 45^\prime$",
     (mediate(r47, r48)) shifted (0, -1pt)) rotated (0, 0, 90)
     with_text_color label_color on_picture flat_quadrant_picture[3];
  label.bot("$\scriptscriptstyle -78^\circ 45^\prime$",
     (mediate(r47, r48) rotated_around (r33, r34) 180) shifted (0, 2pt))
     rotated (0, 0, 90) with_text_color label_color on_picture flat_quadrant_picture[3];
 
  % r33 := get_point (0) flat_quadrant[8][1];
  % r34 := get_point (1) flat_quadrant[8][1];
  % r35 := get_point (2) flat_quadrant[8][1];
  % r36 := get_point (3) flat_quadrant[8][1];
    
enddef;



%% ** (2) End of 3DLDF code.

%% * (1) Emacs-Lisp code for use in indirect buffers when using the          
%%       GNU Emacs editor.  The local variable list is not evaluated when an 
%%       indirect buffer is visited, so it's necessary to evaluate the       
%%       following s-expression in order to use the facilities normally      
%%       accessed via the local variables list.                              
%%       \initials{LDF 2004.02.12}.                                          

%% (progn (metafont-mode) (outline-minor-mode t) (setq fill-column 80))    

%% * (1) Local variables for Emacs.

%% Local Variables:
%% mode:Metapost
%% eval:(outline-minor-mode t)
%% eval:(read-abbrev-file abbrev-file-name)
%% abbrev-mode:t
%% outline-regexp:"%% [*\f]+"
%% End:
