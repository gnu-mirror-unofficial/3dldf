%% pentahex.ldf
%% Created by Laurence D. Finston (LDF) Wed 22 Sep 2021 01:01:57 AM CEST

%% * (1) Copyright and License.

%%%% This file is part of GNU 3DLDF, a package for three-dimensional drawing.  
%%%% Copyright (C) 2021 The Free Software Foundation  

%%%% GNU 3DLDF is free software; you can redistribute it and/or modify 
%%%% it under the terms of the GNU General Public License as published by 
%%%% the Free Software Foundation; either version 3 of the License, or 
%%%% (at your option) any later version.  

%%%% GNU 3DLDF is distributed in the hope that it will be useful, 
%%%% but WITHOUT ANY WARRANTY; without even the implied warranty of 
%%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
%%%% GNU General Public License for more details.  

%%%% You should have received a copy of the GNU General Public License 
%%%% along with GNU 3DLDF; if not, write to the Free Software 
%%%% Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA 

%%%% GNU 3DLDF is a GNU package.  
%%%% It is part of the GNU Project of the  
%%%% Free Software Foundation 
%%%% and is published under the GNU General Public License. 
%%%% See the website http://www.gnu.org 
%%%% for more information.   
%%%% GNU 3DLDF is available for downloading from 
%%%% http://www.gnu.org/software/3dldf/LDF.html.

%%%% Please send bug reports to Laurence.Finston@gmx.de
%%%% The mailing list help-3dldf@gnu.org is available for people to 
%%%% ask other users for help.  
%%%% The mailing list info-3dldf@gnu.org is for sending 
%%%% announcements to users. To subscribe to these mailing lists, send an 
%%%% email with ``subscribe <email-address>'' as the subject.  

%%%% The author can be contacted at: 

%%%% Laurence D. Finston 
%%%% c/o Free Software Foundation, Inc. 
%%%% 51 Franklin St, Fifth Floor 
%%%% Boston, MA  02110-1301  
%%%% USA

%%%% Laurence.Finston@gmx.de


%% https://mathworld.wolfram.com/PentagonalHexecontahedron.html
%% Pentagonal Hexecontahedron

beginfig(1);

  numeric ang[];
  numeric side_length[];
  point p[];

  ang0 := 118.137;
  ang1 := 67.4535;
    
  side_length0 := 2cm;
  
  p0 := origin;
  p1 := (side_length0, 0);
    
  draw p0 -- p1;

  p2 := p1 shifted (0, 1);

  p3 := p0 rotated_around (p2, p1) ang0;

  draw p1 -- p3;
  
  p4 := p0 shifted (0, 1);
  
  p5 := p1 rotated_around (p0, p4) ang0;

  draw p0 -- p5;

  dotlabel.bot("$p_0$", p0);
  dotlabel.bot("$p_1$", p1);
  dotlabel.rt("$p_3$", p3);
  dotlabel.lft("$p_5$", p5);

  p6 := p5 shifted (0, 1);
  p7 := p0 rotated_around (p5, p6) ang0;

  dotlabel.lft("$p_7$", p7);
  
  draw p5 -- p7;

  p8 := p3 shifted (0, 1);
  p9 := p1 rotated_around (p8, p3) ang0;

  dotlabel.rt("$p_9$", p9);
  
  draw p3 -- p9;

  p10 := mediate(p5, p7, 2);
  p11 := mediate(p3, p9, 2);	

  dotlabel.rt("$p_{10}$", p10);
  dotlabel.lft("$p_{11}$", p11);
  
  draw p7 -- p10;
  draw p9 -- p11;

  p12 := (p3 -- p11) intersection_point (p5 -- p10);

  dotlabel.bot("$p_{12}$", p12);

  ang2 := (p3 - p11) angle (p7 - p10);

  message "ang2:";
  show ang2;
  pause;

  ang3 := (p9 - p3) angle (p1 - p3);

  message "ang3:";
  show ang3;
  pause;
  
  
endfig with_projection parallel_x_z;

%% ** (2)

verbatim_metapost "end";
  
end;

%% ** (2) End of 3DLDF code.

%% * (1) Emacs-Lisp code for use in indirect buffers when using the          
%%       GNU Emacs editor.  The local variable list is not evaluated when an 
%%       indirect buffer is visited, so it's necessary to evaluate the       
%%       following s-expression in order to use the facilities normally      
%%       accessed via the local variables list.                              
%%       \initials{LDF 2004.02.12}.                                          

%% (progn (metafont-mode) (outline-minor-mode t) (setq fill-column 80))    

%% * (1) Local variables for Emacs.

%% Local Variables:
%% mode:Metapost
%% eval:(outline-minor-mode t)
%% eval:(read-abbrev-file abbrev-file-name)
%% abbrev-mode:t
%% outline-regexp:"%% [*\f]+"
%% End:


