%%%% sample3.ldf
%%%% Created by Laurence D. Finston (LDF) Tue 29 Jun 2021 11:31:54 PM CEST

%% * (1) Copyright and License.

%%%% This file is part of GNU 3DLDF, a package for three-dimensional drawing.  
%%%% Copyright (C) 2021 The Free Software Foundation  

%%%% GNU 3DLDF is free software; you can redistribute it and/or modify 
%%%% it under the terms of the GNU General Public License as published by 
%%%% the Free Software Foundation; either version 3 of the License, or 
%%%% (at your option) any later version.  

%%%% GNU 3DLDF is distributed in the hope that it will be useful, 
%%%% but WITHOUT ANY WARRANTY; without even the implied warranty of 
%%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
%%%% GNU General Public License for more details.  

%%%% You should have received a copy of the GNU General Public License 
%%%% along with GNU 3DLDF; if not, write to the Free Software 
%%%% Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA 

%%%% GNU 3DLDF is a GNU package.  
%%%% It is part of the GNU Project of the  
%%%% Free Software Foundation 
%%%% and is published under the GNU General Public License. 
%%%% See the website http://www.gnu.org 
%%%% for more information.   
%%%% GNU 3DLDF is available for downloading from 
%%%% http://www.gnu.org/software/3dldf/LDF.html.
  

%%%% Please send bug reports to Laurence.Finston@gmx.de
%%%% The mailing list help-3dldf@gnu.org is available for people to 
%%%% ask other users for help.  
%%%% The mailing list info-3dldf@gnu.org is for sending 
%%%% announcements to users. To subscribe to these mailing lists, send an 
%%%% email with ``subscribe <email-address>'' as the subject.  

%%%% The author can be contacted at: 

%%%% Laurence D. Finston 
%%%% c/o Free Software Foundation, Inc. 
%%%% 51 Franklin St, Fifth Floor 
%%%% Boston, MA  02110-1301  
%%%% USA

%%%% Laurence.Finston@gmx.de

% * (1) Beginning of 3DLDF code.

%% * (1) Plotting stars on sphere development (spherical biangles)

point p[];    %% Global, used in macros.
picture v[];  
numeric bi_ang[];  
picture bi_ang_pict[];
numeric biangle_width[];
numeric RA_arc_length;
numeric Declination_arc_length;
numeric middle_angle;   
numeric min_edge_angle; 
numeric max_edge_angle;
point ra_decl_zero_pt;
point R[];
picture_vector pv;
picture_vector qv;
newwrite nw[];
pen medium_pen;
pen large_pen;
pen Large_pen;
path Q;

medium_pen := pencircle scaled (2pt, 2pt, 2pt);
large_pen  := pencircle scaled (3pt, 3pt, 3pt);
Large_pen  := pencircle scaled (4pt, 4pt, 4pt);

numeric i;  %% Global, used in the following code (not in macros).
boolean do_black;
numeric radius;

radius := 4.5cm;

do_black := false; %% true %% DO NOT set do_black := true!  It doesn't work.

%% !! TODO:  LDF 2021.7.6.  Find out why using a newwrite_vector didn't work.

string s;

for i = 0 upto 7:
  s := "sample_3_" & decimal i & ".tex";
  nw[i] := s;
  s := "%%" & s & "\n%%";
  message "s == " & s;
  write s to nw[i];
endfor;

input "sample3.lmc";

%% ** (2) Call macros.

get_spherical_biangles {radius, do_black}; 

get_sphere_for_plotting_stars {radius};

%% *** (3)

i := 0;

pv += 4;
plot_star_on_sphere (pv) {radius, arcturus, i};
i += 4;

plot_star_on_spherical_biangle (qv) {arcturus, 0, do_black};

%% *** (3)

pv += 4;
plot_star_on_sphere (pv) {radius, hadar, i};
i += 4;

plot_star_on_spherical_biangle (qv) {hadar, 1, do_black};

%% *** (3)

pv += 4;
plot_star_on_sphere (pv) {radius, sirius, i};
i += 4;

plot_star_on_spherical_biangle (qv) {sirius, 2, do_black};

color ccolor;

% if do_black:
%   ccolor := red; % white;
% else:
%   ccolor := black;
% fi;

% draw p52 -- p53 -- p55 -- p54 -- cycle with_color red with_pen Large_pen on_picture bi_ang_pict[5];

% fill p52 -- p53 -- p55 -- p54 -- cycle with_color red on_picture bi_ang_pict[5];

% dotlabel.top("{\largebf Hadar}", R1) with_text_color white with_dot_color white on_picture bi_ang_pict[5];

%% *** (3)

%% ** (2) Figure and output commands.

input "sample3.aux";

%% ** (2)

verbatim_metapost "end";
  
end;  

%% ** (2) End of 3DLDF code.

%% * (1) Emacs-Lisp code for use in indirect buffers when using the          
%%       GNU Emacs editor.  The local variable list is not evaluated when an 
%%       indirect buffer is visited, so it's necessary to evaluate the       
%%       following s-expression in order to use the facilities normally      
%%       accessed via the local variables list.                              
%%       \initials{LDF 2004.02.12}.                                          

%% (progn (metafont-mode) (outline-minor-mode t) (setq fill-column 80))    

%% * (1) Local variables for Emacs.

%% Local Variables:
%% mode:Metapost
%% eval:(outline-minor-mode t)
%% eval:(read-abbrev-file abbrev-file-name)
%% abbrev-mode:t
%% outline-regexp:"%% [*\f]+"
%% End:


