   Point p0;
   Point p1;
   Point normal;
   Transform t;
   Path p;
   Path R;

   Connector_Type *c = 0;

   stringstream temp_strm;

   int status = 0;

   FILE *fp = 0;

   char buffer[64];
   memset(buffer, '\0', 64);

   char temp_in_filename[] = "mp_input.XXXXXX";
    
   errno = 0;
   int fd_in = mkstemp(temp_in_filename);

   if (fd_in == -1)
   {
           cerr << "ERROR!  In `call_metapost':"
                << endl 
                << "`mkstemp' failed, returning -1:"
                << endl
                << strerror(errno)
                << endl 
                << "Failed to create temporary file."
                << endl 
                << "Exiting function unsuccessfully with return value 1."
                << endl;

           return 1;

   }  /* |if (fd_in == -1)|  */

#if DEBUG_COMPILE
    else if (DEBUG)
    {
        cerr << "In `call_metapost':"
             << endl 
             << "`mkstemp' succeeded:  `temp_in_filename' == " << temp_in_filename 
             << endl;

    }  /* |else if (DEBUG)|  */
#endif  /* |DEBUG_COMPILE|  */ 

    char temp_out_filename[] = "mp_output.XXXXXX";
    
    errno = 0;
    int fd_out = mkstemp(temp_out_filename);

    if (fd_out == -1)
    {
            cerr << "ERROR!  In `call_metapost':"
                 << endl 
                 << "`mkstemp' failed, returning -1:"
                 << endl
                 << strerror(errno)
                 << endl 
                 << "Failed to create temporary file."
                 << endl 
                 << "Exiting function unsuccessfully with return value 1."
                 << endl;

            return 1;

    }  /* |if (fd_out == -1)|  */

#if DEBUG_COMPILE
    else if (DEBUG)
    {
        cerr << "In `call_metapost':"
             << endl 
             << "`mkstemp' succeeded:  `temp_out_filename' == " << temp_out_filename 
             << endl;

    }  /* |else if (DEBUG)|  */
#endif  /* |DEBUG_COMPILE|  */ 


@q **** (4) @>
@
@<Define utility functions@>=

   close(fd_out);
   fd_out = 0;

   errno = 0;
   fp = popen("date", "r");

   if (fp == 0)
   {
      cerr << "ERROR!  In `call_metapost':  `popen' failed, returning 0:"
           << endl
           << "`errno' == " << errno << ":  " << strerror(errno)
           << endl
           << "Exiting function unsuccessfully with return value 1."
           << endl;

            return 1;

   } /* |if (fp == 0)| */

@q **** (4) @>

#if DEBUG_COMPILE
   else if (DEBUG)
   { 
      cerr << "In `call_metapost':  `popen' succeeded."
           << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

@q **** (4) @>
@
@<Define utility functions@>=

   memset(buffer, '\0', 64);

   errno = 0;

   status = fread(buffer, 1, 64, fp);

   if (status == 0)
   {
      cerr << "Error!  In `call_metapost':  `fread' failed, returning " << status << ":"
           << endl;

      if (ferror(fp))
         cerr << "`errno' == " << errno << ":  " << strerror(errno) << endl;
      if (feof(fp))
         cerr << "Reached EOF." << endl;

      cerr << "Exiting function unsuccessfully with return value 1."
           << endl;


      pclose(fp);

      return 1;

   }  /* |if (status == 0)| */

#if DEBUG_COMPILE
   else if (DEBUG)
   { 
      cerr << "In `path::resolve':  `fread' succeeded, returning " << status << "."
           << endl
           << "`buffer' == " << buffer << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

   pclose(fp);

@q **** (4) @>
@
@<Define utility functions@>=
    
   if (do_ampersand)
   {
       /* !! TODO:  LDF 2022.04.20.  Add code.  Something will have to be written to
          `temp_strm' so it will be executed in `3DLDF_resolve_bottom.mp'."
       */

   }  /* |if (do_ampersand)| */

@q **** (4) @>
@
@<Define utility functions@>=

  temp_strm << "%% " << temp_in_filename << endl
            << "%% Generated by GNU 3DLDF " << buffer
            << endl
            << "input 3DLDF_resolve_top.mp;" << endl 
            << endl 
            << "extern = false; % true " << endl 
            << endl 
            << "if extern:" << endl 
            << "  tracingonline := 1;" << endl 
            << "fi" << endl 
            << endl 
            << "begin_val = " << begin   << ";" << endl 
            << "end_val = "   << end     << ";" << endl 
            << "res_val = "   << res_val << ";" << endl 
            << "output_filename = \"" << temp_out_filename << "\";"  << endl 
            << endl 
            << "Q0 = " << *this << ";" << endl 
            << endl 
            << "input 3DLDF_resolve_bottom.mp;" << endl 
            << endl 
            << "%% Local Variables:" << endl 
            << "%% mode:MetaPost"    << endl 
            << "%% End:"             << endl 
            << endl;

   memset(buffer, '\0', 64);

#if DEBUG_COMPILE
   if (DEBUG)
   { 
      cerr << "In `call_metapost':  `temp_strm.str' == " 
           << endl
           << temp_strm.str();
   }  
#endif /* |DEBUG_COMPILE|  */@; 

@q **** (4) @>
@
@<Define utility functions@>=

   status = write(fd_in, temp_strm.str().c_str(), temp_strm.str().size());

   errno = 0;

   if (status == -1)
   {
       cerr << "ERROR!  In ``call_metapost':  `write' failed, returning -1:" 
            << endl 
            << "`errno' == " << errno << ":  " << strerror(errno)
            << endl
            << "Exiting function unsuccessfully with return value 1."
            << endl;

       close(fd_in);

       return 1;

   } 
   else if (status < temp_strm.str().size())
   {
       cerr << "ERROR!  In ``call_metapost':  `write' failed, returning `status' == " << status << ":" 
            << endl 
            << "`status < `temp_strm.str().size()' == " << temp_strm.str().size() << ":"
            << endl
            << "Failed to write `temp_strm.str()' completely to temporary MetaPost input file"
            << endl 
            << "`temp_in_filename' == " << "`" << temp_in_filename << "'."
            << endl 
            << "Exiting function unsuccessfully with return value 1."
            << endl;

       return 1;

   } 
#if DEBUG_COMPILE
   else if (DEBUG)
   { 
       cerr << "In ``call_metapost':  `write' succeeded, returning `status' == " 
            << status << "."
            << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

   close(fd_in);
   fd_in = 0;

@q **** (4) @>
@
@<Define utility functions@>=

  temp_strm.str("");

  temp_strm << "mpost " << temp_in_filename; 

  /*  << " >/dev/null 2>/dev/null";  */

#if 0 
  cerr << "temp_strm.str() == " << temp_strm.str() << endl;
#endif 

  errno = 0;

  status = system(temp_strm.str().c_str());

  if (status != 0)
  {
      cerr << "ERROR!  In ``call_metapost':  `system' failed, returning `status' == " 
           << status << "." 
           << endl 
           << "`errno' == " << errno << " == " << strerror(errno)
           << endl 
           << "Failed to execute `mpost' on temporary input file "
           << "`" << temp_in_filename << "'."
           << endl 
           << "Exiting function unsuccessfully with return value 1."
           << endl;

       return 1;

  } /* |if (status != 0)| */

@q **** (4) @>

#if DEBUG_COMPILE
  else if (DEBUG)
  { 
      cerr << "In ``call_metapost':  `system' succeeded, returning 0."
           << endl 
           << "Executed `mpost' on temporary input file `" << temp_in_filename 
           << "' successfully."
           << endl; 

  }  
#endif /* |DEBUG_COMPILE|  */@; 


@q **** (4) @>
@
@<Define utility functions@>=

   errno = 0;   
   fp = 0 ;
   fp = fopen(temp_out_filename, "r");

   if (fp == 0)
   {
      cerr << "ERROR!  In `call_metapost':  `fopen' failed, returning 0:"
           << endl
           << "`errno' == " << errno << ":  " << strerror(errno)
           << endl
           << "Exiting function unsuccessfully with return value 1."
           << endl;

            return 1;

   } /* |if (fp == 0)| */

@q **** (4) @>

#if DEBUG_COMPILE
   else if (DEBUG)
   { 
      cerr << "In `call_metapost':  `fopen' succeeded."
           << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

   if (scanner_node->metapost_output_struct == 0)
      scanner_node->metapost_output_struct = new Metapost_Output_Struct;

   scanner_node->metapost_output_struct->path_vector.clear();

   scanner_node->metapost_output_struct->real_vector.clear();

   yyscan_t scanner;
   zzlex_init_extra(static_cast<void*>(scanner_node),  &scanner);
   zzset_in(fp, scanner);
   zzlex(scanner);
   zzlex_destroy(scanner);

   fclose(fp);
   fp = 0;

#if DEBUG_COMPILE
   if (DEBUG)
   { 
      cerr << "In `call_metapost':  After calling zzlex." << endl;

      cerr << "scanner_node->metapost_output_struct->path_vector.size() == " 
           << scanner_node->metapost_output_struct->path_vector.size() 
           << endl
           << "scanner_node->metapost_output_struct->real_vector.size() == " 
           << scanner_node->metapost_output_struct->real_vector.size() << endl;

      for (vector<Path*>::iterator iter = scanner_node->metapost_output_struct->path_vector.begin();
           iter != scanner_node->metapost_output_struct->path_vector.end();
           ++iter)
      {
         (**iter).show("**iter:");
      }
   }  
#endif /* |DEBUG_COMPILE|  */@; 

@q **** (4) @>
@
@<Define utility functions@>=

   if (do_unlink)
   {
      unlink(temp_in_filename);
      unlink(temp_out_filename);
   }

@q **** (4) @>
@
@<Define utility functions@>=

   for (vector<Path*>::iterator iter = scanner_node->metapost_output_struct->path_vector.begin();
        iter != scanner_node->metapost_output_struct->path_vector.end();
        ++iter)
   {
       pv->v.push_back(*iter);
   }

   scanner_node->metapost_output_struct->path_vector.clear();
   scanner_node->metapost_output_struct->real_vector.clear();


#if DEBUG_COMPILE
   if (DEBUG)
   { 
       cerr << "Exiting `call_metapost' successfully with return value 0."
            << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

   return 0;

}  /* End of |call_metapost| definition  */

@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q End: @>
