   Point p0;
   Point p1;
   Point normal;
   Transform t;
   Path p;
   Path R;

   Connector_Type *c = 0;

   stringstream temp_strm;

   int status = 0;


   close(fd_out);
   fd_out = 0;

@q **** (4) @>
@
@<Define utility functions@>=
    
   if (do_ampersand)
   {
       /* !! TODO:  LDF 2022.04.20.  Add code.  Something will have to be written to
          `temp_strm' so it will be executed in `3DLDF_resolve_bottom.mp'."
       */

   }  /* |if (do_ampersand)| */

@q **** (4) @>
@
@<Define utility functions@>=

  temp_strm << "%% " << temp_in_filename << endl
            << "%% Generated by GNU 3DLDF " << buffer
            << endl
            << "input 3DLDF_resolve_top.mp;" << endl 
            << endl 
            << "extern = false; % true " << endl 
            << endl 
            << "if extern:" << endl 
            << "  tracingonline := 1;" << endl 
            << "fi" << endl 
            << endl 
            << "begin_val = " << begin   << ";" << endl 
            << "end_val = "   << end     << ";" << endl 
            << "res_val = "   << res_val << ";" << endl 
            << "output_filename = \"" << temp_out_filename << "\";"  << endl 
            << endl 
            << "Q0 = " << *this << ";" << endl 
            << endl 
            << "input 3DLDF_resolve_bottom.mp;" << endl 
            << endl 
            << "%% Local Variables:" << endl 
            << "%% mode:MetaPost"    << endl 
            << "%% End:"             << endl 
            << endl;

   memset(buffer, '\0', 64);

#if DEBUG_COMPILE
   if (DEBUG)
   { 
      cerr << "In `call_metapost':  `temp_strm.str' == " 
           << endl
           << temp_strm.str();
   }  
#endif /* |DEBUG_COMPILE|  */@; 

@q **** (4) @>
@
@<Define utility functions@>=

@q **** (4) @>
@
@<Define utility functions@>=

  temp_strm.str("");



  /*  << " >/dev/null 2>/dev/null";  */

#if 0 
  cerr << "temp_strm.str() == " << temp_strm.str() << endl;
#endif 

  errno = 0;

#endif /* |DEBUG_COMPILE|  */@; 

@q **** (4) @>
@
@<Define utility functions@>=

   if (do_unlink)
   {
      unlink(temp_in_filename);
      unlink(temp_out_filename);
      unlink(temp_log_filename);
   }

@q **** (4) @>
@
@<Define utility functions@>=

   for (vector<Path*>::iterator iter = scanner_node->metapost_output_struct->path_vector.begin();
        iter != scanner_node->metapost_output_struct->path_vector.end();
        ++iter)
   {
       pv->v.push_back(*iter);
   }

   scanner_node->metapost_output_struct->path_vector.clear();
   scanner_node->metapost_output_struct->real_vector.clear();


#if DEBUG_COMPILE
   if (DEBUG)
   { 
       cerr << "Exiting `call_metapost' successfully with return value 0."
            << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

   return 0;

}  /* End of |call_metapost| definition  */

@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q End: @>
