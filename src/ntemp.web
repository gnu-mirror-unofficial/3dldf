@q **** (4) path_expression --> path_expression path_join @>   
@q **** (4) CYCLE.                                        @>   

@*3 \§path expression> $\longrightarrow$ 
\§path expression> \§path join>  \.{CYCLE}.

\LOG
\initials{LDF 2004.11.01.}  
Added this rule.

\initials{LDF 2004.11.01.}
Changed the way |Path *p| is handled. 
Now calling |p->adjust_connectors|.
\ENDLOG 

@<Define rules@>= 
 
@=path_expression: path_expression path_join CYCLE@>@/
{

   @<Common declarations for rules@>@; 

#if DEBUG_COMPILE

   DEBUG = false; /* |true| */

   if (DEBUG)
   { 
      cerr << "*** Parser:  Rule `path_expression: path_expression path_join CYCLE'."
           << endl;
   }  
#endif /* |DEBUG_COMPILE|  */@; 

  Path* p = static_cast<Path*>(@=$1@>);
  Connector_Type *c = static_cast<Connector_Type*>(@=$2@>);

#if 0   
   c->show("*c:");
#endif 

  p->set_cycle(false);
  p->adjust_connectors();

  *p += c->connector_string;

  if (DEBUG)
     cerr << "In rule path_expression: path_expression path_join CYCLE:" << endl  
          << "Calling connector_type_vector.push_back." << endl;

  p->set_cycle(true);

  @=$$@> = static_cast<void*>(p); 

};
