@q * (1) Show.@>
@* Show.
\initials{LDF 2021.6.27.}

\LOG
\initials{LDF 2021.6.27.}
Added this function.
\ENDLOG

@q ** (2) Definition.@> 
@
@<Define |Pointer_Vector| specializations@>=
template<>
int
Pointer_Vector<Star, Star>::show(string s, Scanner_Node scanner_node) const                 
{
 
@q *** (3) Preliminaries.@>   

#if DEBUG_COMPILE
   bool DEBUG = true; /* |false| */ @; 
#endif /* |DEBUG_COMPILE|  */@; 


@q ***** (5) Preliminaries.@>   

#if DEBUG_COMPILE
   bool DEBUG = true; /* |false| */ @; 
#endif /* |DEBUG_COMPILE|  */@; 

   stringstream cerr_strm;

   bool error_stop_value   = true;
   bool warning_stop_value = true;
   string thread_name      = "";

   if (scanner_node)
      scanner_node->get_thread_name_and_stop_values(&thread_name,
                                                    &error_stop_value,
                                                    &warning_stop_value);

   using namespace Scan_Parse;

#if DEBUG_COMPILE
   if (DEBUG)
   { 
       
   }  
#endif /* |DEBUG_COMPILE|  */@; 


@q ***** (5)@> 

   stringstream ctr_strm;

   if (s == "")
      s = "Pointer_Vector:";

   cerr_strm << s << endl
             << "size of vector: " << ctr;

   log_message(cerr_strm); 

   cerr << cerr_strm.str() << endl;
   cerr_strm.str("");

   int i = 0;

   for (typename vector<C*>::const_iterator iter = v.begin();
        iter != v.end();
        iter++)
      {
         ctr_strm << i++ << ":";

         if (*iter != static_cast<C*>(0))
            (*iter)->show(ctr_strm.str());
         else 
            cerr_strm << " 0";

         ctr_strm.str(""); 

      }  /* |for|  */

   return 0;


}  /* End of |Pointer_Vector<Star, Star>::show| definition.  */
