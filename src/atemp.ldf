input "plain.lmc";

verbatim_metapost "prologues := 3;outputtemplate := \"%j%3c.eps\";";

path frame;
numeric frame_wd;
numeric frame_ht;

frame_wd := 14cm;
frame_ht := 14cm;

frame :=    (-.5frame_wd, -.5frame_ht) -- (.5frame_wd, -.5frame_ht) -- (.5frame_wd, .5frame_ht)
         -- (-.5frame_wd, .5frame_ht) -- cycle;

pen medium_pen;
medium_pen := pencircle scaled (.5mm, .5mm, .5mm);

pickup medium_pen;

beginfig(1);
  draw frame;
  circle c;
  set c with_radius 4cm with_point_count 8;
  rotate c (90, 0);
  
  numeric n;
  point p[];
  
  n := size c - 1;

  for i = 0 upto n:
    p[i] := get_point (i) c;
  endfor;

  dotlabel.rt("$p_0$", p0);
  dotlabel.urt("$p_1$", p1);
  dotlabel.top("$p_2$", p2);
  dotlabel.ulft("$p_3$", p3);
  dotlabel.lft("$p_4$", p4);
  dotlabel.llft("$p_5$", p5);
  dotlabel.bot("$p_6$", p6);
  dotlabel.lrt("$p_7$", p7);

  path q[];
  q0 := c;

  draw q0;
  
  resolve q0 to 20 save with_no_transform;

  n := size q0;
  message "n == " & decimal n;
  pause;


  for i = 0 upto 10:
    p[i+10] := get_point (i) q0;
  endfor;

  dotlabel.rt("$p_{10}$", p10) with_color red;
  dotlabel.rt("$p_{11}$", p11) with_color red;
  dotlabel.rt("$p_{12}$", p12) with_color red;
  dotlabel.rt("$p_{13}$", p13) with_color red;
  dotlabel.rt("$p_{14}$", p14) with_color red;
  dotlabel.rt("$p_{15}$", p15) with_color red;
  
endfig with_projection parallel_x_y;

end_mp;
end;

beginchar("A", 10, 20, 30); %% Don't use units for `wd', `ht' and `dp'!
                            %% LDF 2022.04.18.
endchar;
end;

verbatim_metapost "abc;";
verbatim_tex "def";  %% PLEASE NOTE!  3dldf inserts a ';' after 'etex', so don't include one
                     %% in the string, unless it's desired.
                     %% LDF 2022.04.18.

verbatim_metafont "ghi;";

end;


path q[];

beginfig(1);
  q0 := (1, 1) -- (2, 2);
  draw q0;
  show current_picture;
endfig with_projection parallel_x_y;

show current_picture;

beginfig(2);
  show q0;
  draw q0;
  show current_picture;
  end;

endfig;  

end;


show current_picture;
message "After fig. 1:  current_picture (above).";
%pause;

%show q0;

%show q0;
%message "q0 (above)";
%pause;



beginfig(2);
  message "After beginfig 2.";

  
  q1 := (10, 10) -- (20, 20);

  show current_picture;



  message "In fig. 2, before draw:  current_picture (above).";
  %pause;


  message "Before draw in fig. 2.";
  
  draw q1;

  message "After draw in fig. 2.";


  show current_picture;
  message "In fig. 2, after draw:  current_picture (above).";


%pause;
  
endfig with_projection parallel_x_y;

end;

%show current_picture;
%message "After fig. 2:  current_picture (above).";
%pause;

end;

%% * (1) End of 3DLDF code

%% * (1) Local variables for Emacs

%% Local Variables:
%% mode: MetaPost
%% eval:(outline-minor-mode t)
%% outline-regexp:"%% [*\f]+"
%% End:
