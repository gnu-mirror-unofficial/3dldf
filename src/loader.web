@q loader.web @>
      
@q * (1) Copyright and License.@>

@q This file is part of GNU 3DLDF, a package for three-dimensional drawing.  @>
@q Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, @>
@q 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021 The Free Software Foundation, Inc.  @>

@q GNU 3DLDF is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version.  @>

@q GNU 3DLDF is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details.  @>

@q You should have received a copy of the GNU General Public License @>
@q along with GNU 3DLDF; if not, write to the Free Software @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA@>

@q GNU 3DLDF is a GNU package.  @>
@q It is part of the GNU Project of the  @>
@q Free Software Foundation @>
@q and is published under the GNU General Public License. @>
@q See the website http://www.gnu.org @>
@q for more information.   @>
@q GNU 3DLDF is available for downloading from @>
@q http://www.gnu.org/software/3dldf/LDF.html.@>

@q ("@@" stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gmx.de@>
@q The mailing list help-3dldf@@gnu.org is available for people to @>
@q ask other users for help.  @>
@q The mailing list info-3dldf@@gnu.org is for sending @>
@q announcements to users. To subscribe to these mailing lists, send an @>
@q email with ``subscribe <email-address>'' as the subject.  @>

@q The author can be contacted at: @>

@q Laurence D. Finston                 @> 
@q c/o Free Software Foundation, Inc.  @>
@q 51 Franklin St, Fifth Floor         @> 
@q Boston, MA  02110-1301              @>
@q USA                                 @>

@q Laurence.Finston@@gmx.de (@@ stands for a single "at" sign.)@>

@q * (1) Preprocessor variables and library files.@>
@** Preprocessor variables and library files\quad ({\tt loader\PERIOD web}).\hfil
\initials{LDF 2002.10.15.}
It would, of course, be possible to put this code into a \.{.h} file
directly, but it's convenient to have a \CWEB/ file so that it can be
\.{cweaved} along with the rest of 3DLDF.

\initials{LDF 2003.07.18.}  
Set the preprocessor macro |LDF_GCC_3_3| to 1 in
order to compile using  
gcc version 3.3 20030226 (prerelease) (SuSE Linux).  
Set it  to 0 in order to compile
using GCC version 3.95.3 20010315 (SuSE).
This can be faster than using GCC 3.3, especially with respect to 
linking.  

\LOG
\initials{LDF 2003.08.21.}  Now including \filename{plfmvar.h}.  
It contains 
|@[#define@]| and |@[#undef@]| preprocessor commands for conditional
compilation. 
There's a different version of this file in each of the subdirectories
used for compiling with a different combination of operating system,
compiler, and compiler version.

\initials{LDF 2003.07.25.}  Modified the conditional constructions governing
compilation slightly.

\initials{LDF 2003.08.14.}  Now including \filename{getopt.h} for the GCC
versions under Linux.  It's for processing the command line options.

\initials{LDF 2003.08.14.}  Now including \filename{streambuf.h}, if
|LDF_GCC_2_95| is defined, otherwise \filename{ios}.  This is for
stream formatting.

\initials{LDF 2003.08.29.}  Removed \filename{getopt.h} to \filename{main.web},
because it's only used there.  

\initials{LDF 2003.09.03.}  Added |@[#define@]| |LDF_PUBLIC| in order to be
able to conditionally include \filename{plfmvar.h}.  The latter is not
included in the version for distribution.  Instead, the preprocessor
variables are defined or undefined here.

\initials{LDF 2003.11.12.}  Removed the version control identifiers from the CWEB
files for the distribution of 3DLDF 1.1.  They're still used in my
development versions.
\ENDLOG 

@q * Configuration file.@>
@ Configuration file.@>
This section includes \filename{config.h}, which is generated by
\.{configure}.  This is new in 3DLDF 1.1.  The \.{configure} script
generated by Autoconf tests whether certain library files are present,
and defines preprocessor variables in \filename{config.h} accordingly.
These can be used for conditionally compiling code, so that 
library files are only included if they are really present.  However,
it will be necessary to add code for handling the case that they
aren't present.  I haven't done this yet, although I have put in
conditional code using these variables in a couple of places.  
@:!! TO DO@> TO DO:  Work on this.  \initials{LDF 2003.11.12.}

Autoconf does not per default check the version of
the compiler that's used, and I'm not sure whether this would really
be sensible.  3DLDF already contains conditionally compiled code based
on whether the DEC \CPLUSPLUS/ compiler, or the GNU \CPLUSPLUS/
compiler (GCC) version 3.95 or version 3.3 is used.  
If the DEC compiler is used, the preprocessor variables |LDF_GCC_2_95|
or |LDF_GCC_3_3| must be undefined by hand below.  It defines
|__DECCXX| itself.  If GCC is used, 
one of them must be defined, and the other undefined.  Per default,
|LDF_GCC_3_3| is defined and |LDF_GCC_2_95| is undefined. 
This is because GCC 3.3 is, in general, an improvement over GCC 2.95.
However, I usually use GCC 2.95 myself, because linking is
significantly faster on the computer I use.  \initials{LDF 2003.11.12.}

|DEBUG_COMPILE| is used for conditionally compiling debugging code.
In general, the debugging code will be inside a conditional using
|DEBUG| or a similar local variable.  In productions versions, |DEBUG|
will normally be |false|, but it users can set it to |true| either in
the source code or when running 3DLDF under the control of a
debugger.  \initials{LDF 2004.04.22.}

\LOG
\initials{LDF 2003.11.12.}  
Added this section.

\initials{LDF 2003.12.17.}  
\filename{config.h} is now not included if
I'm with the DEC \CPLUSPLUS/ compiler.  This is because because
building with Autoconf, etc.,
doesn't work on the DEC Alpha machine I'm using.

\initials{LDF 2004.04.22.}  
Added |DEBUG_COMPILE|.  

\initials{LDF 2004.07.02.} 
Now only declaring |DEBUG_COMPILE| if it's undefined.  
It should now be defined and set to either 0 or 1 in \filename{config.h} 
according to whether the options \.{--disable-debug-compile} 
or \.{--enable-debug-compile} are used or not.  The default is 1, so that
conditional compilation of debugging output is enabled.  If for some reason it's
not defined in \filename{config.h}, it's defined and set to 1 here.
\ENDLOG 

@<Include files@>=

#ifndef __DECCXX
#include "config.h"
#endif 

#ifndef DEBUG_COMPILE
#define DEBUG_COMPILE 1
#endif

@q * (1) Library files.@>
@* Library files.@>

\LOG
\initials{LDF 2003.12.17.}  
Changed the conditional in which 
|_GNU_SOURCE|, |LDF_GCC_3_3|, and |LDF_GCC_2_95| are defined or
undefined.  Working on compiling with the DEC \CPLUSPLUS/ compiler.

\initials{LDF 2004.04.16.}  
Now including the \filename{map} library
header file.  It's needed
for the `typedef' declaration of |id_map_type| in \filename{io.web}.

\initials{LDF 2004.04.20.}  
Now including \filename{errno.h}.  

\initials{LDF 2004.05.03.}  
Now including \filename{stack}.  

\initials{LDF 2004.06.22.}  
Now including \filename{pthread.h}.  

\initials{LDF 2004.07.21.}  
@:BUG FIX@> BUG FIX: 
Now including \filename{bitset}.  
On one user's installation, \filename{gsltmplt.cxx} failed to compile 
because |bitset| wasn't declared.

\initials{LDF 2005.01.19.}
Now including \filename{list}.

\initials{LDF 2005.09.09.}
Now including \filename{limits}.
\ENDLOG 

@<Include files@>=

#define LDF_PUBLIC 

#ifndef __DECCXX
#ifndef _GNU_SOURCE
#define _GNU_SOURCE
#endif 
#define LDF_GCC_3_3
#undef   LDF_GCC_2_95 
#endif 

#ifdef __DECCXX
#define __USE_STD_IOSTREAM  /* Needed for "sstream" below. */
#endif 

#ifdef HAVE_LIBMYSQLCLIENT
   #ifdef HAVE_MYSQL_H
      #define MYSQL_AVAILABLE
      #undef MYSQL_UNAVAILABLE
   #else
      #define MYSQL_UNAVAILABLE
      #undef MYSQL_AVAILABLE
   #endif 
#else
   #define MYSQL_UNAVAILABLE
   #undef MYSQL_AVAILABLE
#endif 

#include <algorithm>
#include <bitset>
#include <deque>
#include <errno.h>
#include <exception>

#ifdef __GNUC__
#if HAVE_FLOAT_H
#include <float.h>  /* \initials{LDF 2002.12.13.}  Needed for |FLT_MAX|.  */
#endif 
#endif 

#include <fstream>
#include <functional>

#include <iomanip>

#ifdef LDF_GCC_2_95     /* For stream formatting. \initials{LDF 2003.08.14.} */
#include <streambuf.h>
#else
#include <ios>
#endif 

#include <iostream>

#include <iterator>

#if HAVE_LIMITS_H 
#include <limits.h>
#endif

#include <limits>     

#include <list>   

#include <map>   

#include <math.h>
#ifdef LDF_GCC_3_3
#include <new>
#else
#ifdef LDF_GCC_2_95
#include <new.h>
#endif
#endif 

#include <pthread.h>   

#include <sstream>   

#include <stack>   

#include <stdarg.h>
#include <stdexcept>

#ifdef __GNUC__
#include <stdio.h>   
#endif 
   
#ifdef __DECCXX
#include <stdlib.h>
#elif HAVE_STDLIB_H
#include <stdlib.h>
#endif 

#ifdef HAVE_MYSQL_H
#include <mysql.h>
#endif 

@ \filename{streambuf.h} is included above, if |LDF_GCC_2_95| is
defined, instead of \filename{ios}, which is included in all other
cases.  \initials{LDF 2003.08.14.}

\LOG
\initials{LDF 2004.04.20.}  Now including \filename{sys/types.h},
\filename{sys/wait.h}, and \filename{unistd.h}.  They declare 
types and functions needed for multiprocessing.  

\initials{LDF 2007.11.28.}
Now conditionally including \filename{gls/gsl\_matrix.h}.

\initials{LDF 2007.12.04.}
Now conditionally including \filename{gls/gsl\_complex.h}
and \filename{gls/gsl\_complex\_math.h}.
\ENDLOG 

@<Include files@>=
#include <string> 
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

#include <valarray>
#include <vector>

#ifdef HAVE_LIBGSL 
#include <gsl/gsl_matrix.h>
#include <gsl/gsl_complex.h>
#include <gsl/gsl_complex_math.h>
#endif

@
\LOG 
\initials{LDF 2003.07.18.}  Added
``|using namespace std|''.  This is needed with GCC 3.3, but not with
GCC 2.95 or the DEC C++ compiler.
\ENDLOG
@<Include files@>=
using namespace std;

@q * Putting loader together.@>
@ Putting {\tt loader} together.

@q ** This is what's compiled.@>
@ This is what's compiled.
It's not necessary to include \filename{stdlib.h} when using GCC 3.3,
but I think it's safer.  
\initials{LDF 2004.01.06.}

\LOG
\initials{LDF 2004.01.06.}  Added this section.  It simplifies the
rules for building the executable \.{3dldf} if \filename{loader.c} is
compiled. 
\ENDLOG 
@c
#ifdef __DECCXX
#include <stdlib.h>
#elif HAVE_STDLIB_H
#include <stdlib.h>
#endif 

using namespace std;

@q ** This is what's written to \filename{loader.h}.@>
@ This is what's written to the \filename{loader.h}.
\LOG
\initials{LDF 2004.01.06.}  Added this section.
\ENDLOG 
@(loader.h@>=
@<Include files@>@;

@q * Local variables for Emacs.@>

@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q run-gxx-on-file:"main.c" @>
@q run-cweb-on-file:"main.web" @>
@q run-cweave-on-file:"3DLDF.web" @>
@q run-mp-on-file:"persp.mp" @>
@q makefile:"makefile" @>
@q executable-name:"pp" @>
@q use-g++:t @>
@q eval:(read-abbrev-file) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q End: @>

