@q format.web @>
                  
@q * (1) Copyright and License.@>

@q This file is part of GNU 3DLDF, a package for three-dimensional drawing.  @>
@q Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, @>
@q 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018 The Free Software Foundation  @>

@q GNU 3DLDF is free software; you can redistribute it and/or modify @>
@q it under the terms of the GNU General Public License as published by @>
@q the Free Software Foundation; either version 3 of the License, or @>
@q (at your option) any later version.  @>

@q GNU 3DLDF is distributed in the hope that it will be useful, @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the @>
@q GNU General Public License for more details.  @>

@q You should have received a copy of the GNU General Public License @>
@q along with GNU 3DLDF; if not, write to the Free Software @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA@>

@q GNU 3DLDF is a GNU package.  @>
@q It is part of the GNU Project of the  @>
@q Free Software Foundation @>
@q and is published under the GNU General Public License. @>
@q See the website http://www.gnu.org @>
@q for more information.   @>
@q GNU 3DLDF is available for downloading from @>
@q http://www.gnu.org/software/3dldf/LDF.html.@>

@q ("@@" stands for a single at-sign in the following paragraph.) @>

@q Please send bug reports to Laurence.Finston@@gmx.de@>
@q The mailing list help-3dldf@@gnu.org is available for people to @>
@q ask other users for help.  @>
@q The mailing list info-3dldf@@gnu.org is for sending @>
@q announcements to users. To subscribe to these mailing lists, send an @>
@q email with ``subscribe <email-address>'' as the subject.  @>

@q The author can be contacted at: @>

@q Laurence D. Finston                 @> 
@q c/o Free Software Foundation, Inc.  @>
@q 51 Franklin St, Fifth Floor         @> 
@q Boston, MA  02110-1301              @>
@q USA                                 @>

@q Laurence.Finston@@gmx.de (@@ stands for a single "at" sign.)@>


@q * (0) Formatting commands.@>
@** Formatting commands.
\cweave/ formats ``\.{==}'' as ``|==|'', ``\.{!=}'' as
``|!=|'', and ``\.{!}'' as ``|!|''.  
Programmers who use these tokens must type them as 
``\.{==}'', ``\.{!=}, and ``{\tt !}''.

\LOG
\initials{LDF 2004.05.21.}  Created this file.  It's needed because I
had to break \filename{3DLDFprg.web} into multiple files so as not to
exceed CWEAVE's limit on section numbers (2000).  This file is
currently included in \filename{3DLDFprg.web} and
\filename{3DLDFp02.web}.  I plan to rename the former
\filename{3DLDFp01.web}, but this will entail changing
\filename{Makefile.am}.  
\ENDLOG 


@q ** (0) \CPLUSPLUS/ and standard library types.@>
@* \CPLUSPLUS/ and standard library types.
The following formatting commands are for types defined in \CPLUSPLUS/
or in the \CPLUSPLUS/ Standard Library, but not handled correctly by
\cweave/.  

%% \newwrite\syntaxfile
%% \openout\syntaxfile=syntax

%% \newlinechar=`^^J

%% \begingroup
%% \catcode`\%=12
%% \write\syntaxfile{%% syntax.tex^^J^^J\noexpand\input syntax.mac^^J^^J}
%% \endgroup

%\write\syntaxfile{^^J^^J\par\vfil\noexpand\supereject\end}
%\closeout\syntaxfile

\LOG
\initials{LDF 2004.05.21.}
Commented-out code for writing output to \filename{syntax.tex}.  I've
left the code here in case I want to adapt it to some other purpose
later. 
\ENDLOG 


@f bitset int

@f bool   int
@f bools   bool

@f ifstream int
@s ifstreams ifstream

@f iterator int
@f iterators iterator 

@f key_type int 
@s key_types key_type 

@f mapped_type int 
@s mapped_types mapped_type 

@f map int
@s maps map

@f ofstream int
@s ofstreams ofstream

@f stat int

@f pair int
@s pairs pair

@f stringstream int
@s stringstreams stringstream

@f numeric_limits int

@f pair   int
@s pairs pair


@f string char
@s strings string

@f tm int

@f valarray int
@s valarrays valarray

@f vector int 
@s vectors vector


@q ** Types defined in the \CPLUSPLUS/ sources of 3DLDF.@>

@q LDF 2002.10.20.  The following formatting commands are needed     @>
@q because sometimes types are referred to before they are declared. @>
@q These formatting commands are not visible in the \cweave/ output, @>
@q I have visible ones in the sections where the types are declared. @>

@s this a @q  Do not delete!  This isn't an error.      @>
          @q |this| should be formatted as a variable.  @>
          @q \initials{LDF 2004.02.12.}                 @>

@s Color int
@s Colors Color

@s color Color
@s colors color

@s Label int
@s Labels Label

@s Focus int
@s Focus Label

@s focus Focus
@s focuses focus

@s Transform_Matrix int
@s Transform_Matrices Transform_Matrix

@s Picture int
@s Pictures Picture

@s picture Picture
@s pictures picture

@s Transform int  
@s Transforms Transform

@s transform Transform
@s transforms transform

@s Shape int
@s Shapes Shape

@s shape Shape
@s shapes shape

@s Point Shape
@s Points Point

@s point Point
@s points point

@s Nurb Shape
@s Nurbs Nurb

@s Path Shape
@s Paths Path

@s path Path
@s paths path


@s Triangle Shape
@s Triangles Triangle

@s triangle Triangle
@s triangles triangle

@s Line Point
@s Lines Line

@s line Line
@s lines line
  
@s Plane Line
@s Planes Plane

@s plane Plane
@s planes plane

@s Ellipse Path 
@s Ellipses Ellipse

@s ellipse Ellipse
@s ellipses ellipse

@s Circle Ellipse
@s Circles Circle

@s circle Circle
@s circles circle

@s Reg_Polygon Shape
@s Reg_Polygons Reg_Polygon

@s reg_polygon Reg_Polygon
@s reg_polygons reg_polygon

@s Rectangle Reg_Polygon
@s Rectangles Rectangle

@s rectangle Rectangle
@s rectangles rectangle

@s Curve Path
@s Curves Curve

@s curve Curves
@s curves curve


@s Reg_Cl_Plane_Curve Curve
@s Reg_Cl_Plane_Curves Reg_Cl_Plane_Curve

@s reg_cl_plane_curve Reg_Cl_Plane_Curve
@s reg_cl_plane_curves reg_cl_plane_curve

@s Solid Shape
@s Solids Solid

@s solid Solid
@s solids solid

@s Cuboid Solid
@s Cuboids Cuboid

@s cuboid Cuboid
@s cuboids cuboid

@s Polyhedron Solid
@s Polyhedra Polyhedron

@s polyhedron Polyhedron
@s polyhedra polyhedron

@s Dodecahedron Polyhedron
@s Dodecahedra Dodecahedron

@s dodecahedron Dodecahedron
@s dodecahedra dodecahedron

@s Icosahedron Polyhedron
@s Icosahedra Icosahedron

@s icosahedron Icosahedron
@s icosahedra icosahedron

@s Bool_Pair             float
@s Bool_Pairs Bool_Pair

@s Bool_Point            Point
@s Bool_Points Bool_Point

@s Bool_Point_Pair       Point
@s Bool_Point_Pairs Bool_Point_Pair

@s Bool_Point_Quadruple  Point
@s Bool_Point_Quadruples Bool_Point_Quadruple

@s Bool_Real             float
@s Bool_Reals Bool_Real


@s Bool_Real_Point       Point
@s Bool_Real_Points Bool_Real_Point

@s Id_Map_Entry_Type int
@s Id_Map_Entry_Types Id_Map_Entry_Types

@s Id_Map_Entry_Node Id_Map_Entry_Type
@s Id_Map_Entry_Nodes Id_Map_Entry_Node

@s Id_Map_Sub_Type int
@s Id_Map_Sub_Types Id_Map_Sub_Type

@s Id_Map_Iterator int
@s Id_Map_Iterators Id_Map_Iterator

@s Id_Map_Const_Iterator Id_Map_Iterator
@s Id_Map_Const_Iterators Id_Map_Const_Iterator

@s Id_Map_Type int
@s Id_Map_Types Id_Map_Type

@s Id_Map_Node Id_Map_Type 
@s Id_Map_Nodes Id_Map_Node

@s Io_Struct int
@s Io_Structs Io_Struct 

@s Input_Struct Io_Struct
@s Input_Structs Input_Struct

@s Output_Struct Io_Struct
@s Output_Structs Output_Struct 

@s Point_Pair            Point
@s Point_Pairs Point_Pair

@s real                  float
@s reals real

@s Real_Pair             real
@s Real_Pairs Real_Pair

@s Real_Triple real
@s Real_Triples Real_Triple

@s Run_State int
@s Run_States Run_State

@s Scanner_Type int
@s Scanner_Types Scanner_Type

@s Scanner_Node Scanner_Type
@s Scanner_Nodes Scanner_Node

@s Shape_Func_Ptr int
@s Shape_Func_Ptrs Shape_Func_Ptr 

@q ** Namespaces.@>

@s Scan_Parse int

@q ** Types defined by Bison.  @> 

@s YYSTYPE int
@s YYSTYPES int
@s YYLTYPE YYSTYPE
@s YYLTYPES YYLTYPE

@q ** Types defined in the Bison grammar defined in \filename{parser.w}.@>

@s terminal_symbol  int
@s terminal_symbols terminal_symbol 

@s non_terminal_symbol  terminal_symbol 
@s non_terminal_symbols non_terminal_symbol 

@s numeric_token      non_terminal_symbol
@s numeric_tokens numeric_token
  

@s END terminal_symbol
@s BEGINFIG terminal_symbol
@s ENDFIG terminal_symbol
@s DRAWDOT terminal_symbol
@s DRAW terminal_symbol
@s FILL terminal_symbol
@s FILLDRAW terminal_symbol
@s UNDRAWDOT terminal_symbol
@s UNDRAW terminal_symbol
@s UNFILL terminal_symbol
@s UNFILLDRAW terminal_symbol

@s DASHED terminal_symbol
@s WITHCOLOR terminal_symbol
@s WITHPEN terminal_symbol

@s COLOR     terminal_symbol
@s PATH      terminal_symbol
@s PEN       terminal_symbol
@s POINT     terminal_symbol
@s TRANSFORM terminal_symbol

@s BASIC_PATH_JOIN     terminal_symbol
@s CYCLE               terminal_symbol
@s ID                  terminal_symbol
@s INTEGER             terminal_symbol
@s REAL                terminal_symbol
@s ASSIGN terminal_symbol
@s PLUS_ASSIGN ASSIGN  
@s MINUS_ASSIGN ASSIGN 
@s TIMES_ASSIGN ASSIGN 
@s DIVIDE_ASSIGN ASSIGN 

@s EQUATE terminal_symbol



@s TRUE terminal_symbol
@s FALSE terminal_symbol
@s IS_ODD terminal_symbol
@s IS_EVEN terminal_symbol
@s IS_CYCLE terminal_symbol
@s IS_KNOWN terminal_symbol
@s IS_UNKNOWN terminal_symbol
@s CHAREXISTS terminal_symbol



@s program non_terminal_symbol

@s statement_list non_terminal_symbol

@s statement non_terminal_symbol

@s figure_command statement
@s beginfig_command figure_command
@s endfig_command figure_command
@s  declaration statement
@s point_declaration declaration 
@s color_declaration declaration 
@s pen_declaration declaration 
@s path_declaration declaration 
@s path_segment_sequence non_terminal_symbol
@s path_segment non_terminal_symbol
@s cycle_specifier non_terminal_symbol
@s initialization statement
@s assignment statement
@s drawing_command statement
@s drawdot_command drawing_command 
@s draw_command drawing_command 
@s fill_command drawing_command 
@s filldraw_command drawing_command 

@s undrawdot_command drawdot_command 
@s undraw_command draw_command 
@s unfill_command fill_command 
@s unfilldraw_command filldraw_command 
@s number_list non_terminal_symbol
@s number non_terminal_symbol
