@c dttypes.texi

@c Created by Laurence D. Finston (LDF) Wed Nov  6 16:56:11 CET 2013

@c This file is part of the 3DLDF 2.0 User Manual.
@c Copyright (C) 2013, 2014, 2015, 2016, 2017, 2018 The Free Software Foundation
@c See the section "GNU Free Documentation License" in the file 
@c fdl.texi for copying conditions.

@c Author:  Laurence D. Finston (LDF)

@c * (1) Data Types

@node Data Types, FDL, Getting Started, Top
@chapter Data Types

@c ** (2) Numeric types

@section Numeric types

@table @code
@item @code{numeric}
Integers and floating point numbers.

@item boolean
@code{true} or @code{false}

@item ulong_long
Unsigned long long integers.  Corresponds to the C type 
@code{unsigned long long int}.

@item complex
Complex number.

@item matrix
Matrix.
@end table


@c ** (2) Types for drawing and labeling:

@section Types for drawing and labeling:

@table @code 
@item transform
Transformation matrix.

@item focus
@cindex perspective projection
@c
Focus for the @dfn{perspective projection}.

@item pen

@itemx dash_pattern

@itemx color

@itemx string
@end table 


@c ** (2) Shape types

@section Shape types

@table @code 
@item point

@itemx path

@itemx circle

@itemx circle_slice

@itemx arc

@itemx cone

@itemx conic_section_lattice

@itemx cuboid

@itemx cylinder

@itemx ellipse_slice

@itemx ellipse

@itemx ellipsoid

@itemx glyph 

@itemx helix

@itemx hyperbola

@itemx parabola

@itemx paraboloid

@itemx polygon

@itemx polyhedron_slice

@itemx polyhedron

@itemx rectangle

@itemx reg_polygon

@itemx sphere

@itemx sphere_development

@itemx triangle
@end table 

@c ** (2) Combined types

@section Combined types

@table @code 
@item bool_point
@end table 

@c ** (2) Other types

@section Other types

@table @code 
@item plane

@itemx nurb

@itemx origami_figure
@end table 


@c ** (2) Vector types

@section Vector types

@noindent 
Vector types (alphabetical):

@table @code 
@item arc_vector

@itemx boolean_vector

@itemx bool_point_vector

@itemx circle_slice_vector

@itemx circle_vector

@itemx color_vector

@itemx complex_vector

@itemx cone_vector

@itemx conic_section_lattice_vector

@itemx cuboid_vector

@itemx cylinder_vector

@itemx dash_pattern_vector

@itemx ellipse_slice_vector

@itemx ellipse_vector

@itemx ellipsoid_vector

@itemx focus_vector

@itemx glyph_vector

@itemx helix_vector

@itemx hyperbola_vector

@itemx macro_vector

@itemx matrix_vector

@itemx numeric_vector

@itemx nurb_vector

@itemx origami_figure_vector

@itemx parabola_vector

@itemx paraboloid_vector

@itemx path_vector

@itemx pen_vector

@itemx picture_vector

@itemx plane_vector

@itemx point_vector

@itemx polygon_vector

@itemx polyhedron_slice_vector

@itemx polyhedron_vector

@itemx rectangle_vector

@itemx reg_polygon_vector

@itemx sphere_development_vector

@itemx sphere_vector

@itemx string_vector

@itemx transform_vector

@itemx triangle_vector

@itemx ulong_long_vector
@end table 

@c *** (3)

@c ** (2)

@c * (1) Local Variables for Emacs

@c For use in indirect buffers:
@c
@c (progn (texinfo-mode) (outline-minor-mode t) (setq outline-regexp "@c *\\*+") (ignore (quote 
@c )) (set (make-local-variable 'run-texi2dvi-on-file) "3dldf.texi"))
  
@c Local Variables:
@c mode:Texinfo
@c abbrev-mode:t
@c eval:(outline-minor-mode t)
@c outline-regexp:"@c *\\*+"
@c eval:(set (make-local-variable 'run-texi2dvi-on-file) "3dldf.texi")
@c fill-column:80
@c End:


