Nonterminals useless in grammar

    combined_string


Terminals unused in grammar

    ASTERISK
    OUTPUT
    OUT
    APPEND
    FILE_YY
    OPEN
    CLOSE
    CLOSED
    SELECT
    ALL
    FROM
    ORDER
    ASCENDING
    DESCENDING
    UNIQUE
    ID
    APPROX
    VECTOR
    RANK
    APPARENT
    ABSOLUTE
    MAGNITUDE
    VARIES
    IS
    BINARY
    MULTIPLE
    COMMON
    NAME
    GREEK
    LATIN
    ARABIC
    GENITIVE
    FLAMSTEED
    BAYER
    BS
    HR
    NUMBER
    DESIGNATION
    ABBREVIATION
    RIGHT
    ASCENSION
    DECLINATION
    ECLIPTIC
    HOUR
    HOURS
    MINUTE
    MINUTES
    SECOND
    SECONDS
    DEGREES
    DECIMAL
    CONSTANT
    COMPARE
    LOWEST
    HIGHEST
    FLOAT
    STAR
    CONSTELLATION
    CONSTELLATIONS
    PLANET
    PLANETS
    TIME
    SIDEREAL
    UNIVERSAL
    GREENWICH
    LOCAL
    SOLAR
    TRANSFORM
    TRANSFORMS
    POINT
    POINTS
    PATH
    PATHS
    PICTURE
    PICTURES
    SONG
    WRITE


Rules useless in grammar

   21 combined_string: STRING
   22                | combined_string STRING


State 14 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list END

    2 statement_list: %empty
    3               | statement_list statement

    4 statement: INPUT STRING
    5          | ENDINPUT
    6          | QUERY table_name modifier_list

    7 table_name: STARS
    8           | SONGS

    9 modifier_list: %empty
   10              | modifier
   11              | modifier_list modifier

   12 modifier: LIMIT INTEGER
   13         | COUNT INTEGER

   14 statement: SEMI_COLON
   15          | SORT item_vector BY sort_field_list

   16 item_vector: STAR_VECTOR
   17            | SONG_VECTOR

   18 sort_field_list: sort_field
   19                | sort_field_list sort_field

   20 sort_field: APPROX_RANK_APPARENT_MAGNITUDE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ASTERISK <int_value> (258)
    SEMI_COLON <int_value> (259) 14
    INPUT <int_value> (260) 4
    OUTPUT <int_value> (261)
    OUT <int_value> (262)
    APPEND <int_value> (263)
    FILE_YY <int_value> (264)
    OPEN <int_value> (265)
    CLOSE <int_value> (266)
    CLOSED <int_value> (267)
    END <int_value> (268) 1
    ENDINPUT <int_value> (269) 5
    SELECT <int_value> (270)
    ALL <int_value> (271)
    FROM <int_value> (272)
    BY <int_value> (273) 15
    ORDER <int_value> (274)
    ASCENDING <int_value> (275)
    DESCENDING <int_value> (276)
    UNIQUE <int_value> (277)
    LIMIT <int_value> (278) 12
    ID <int_value> (279)
    QUERY <int_value> (280) 6
    APPROX <int_value> (281)
    APPROX_RANK_APPARENT_MAGNITUDE <int_value> (282) 20
    SORT <int_value> (283) 15
    VECTOR <int_value> (284)
    RANK <int_value> (285)
    APPARENT <int_value> (286)
    ABSOLUTE <int_value> (287)
    MAGNITUDE <int_value> (288)
    VARIES <int_value> (289)
    IS <int_value> (290)
    BINARY <int_value> (291)
    MULTIPLE <int_value> (292)
    COMMON <int_value> (293)
    NAME <int_value> (294)
    GREEK <int_value> (295)
    LATIN <int_value> (296)
    ARABIC <int_value> (297)
    GENITIVE <int_value> (298)
    FLAMSTEED <int_value> (299)
    BAYER <int_value> (300)
    BS <int_value> (301)
    HR <int_value> (302)
    NUMBER <int_value> (303)
    DESIGNATION <int_value> (304)
    ABBREVIATION <int_value> (305)
    RIGHT <int_value> (306)
    ASCENSION <int_value> (307)
    DECLINATION <int_value> (308)
    ECLIPTIC <int_value> (309)
    HOUR <int_value> (310)
    HOURS <int_value> (311)
    MINUTE <int_value> (312)
    MINUTES <int_value> (313)
    SECOND <int_value> (314)
    SECONDS <int_value> (315)
    DEGREES <int_value> (316)
    DECIMAL <int_value> (317)
    CONSTANT <int_value> (318)
    COMPARE <int_value> (319)
    LOWEST <int_value> (320)
    HIGHEST <int_value> (321)
    INTEGER <int_value> (322) 12 13
    FLOAT <float_value> (323)
    STRING <string_value> (324) 4
    STAR <int_value> (325)
    STARS <int_value> (326) 7
    STAR_VECTOR <int_value> (327) 16
    CONSTELLATION <int_value> (328)
    CONSTELLATIONS <int_value> (329)
    PLANET <int_value> (330)
    PLANETS <int_value> (331)
    TIME <int_value> (332)
    SIDEREAL <int_value> (333)
    UNIVERSAL <int_value> (334)
    GREENWICH <int_value> (335)
    LOCAL <int_value> (336)
    SOLAR <int_value> (337)
    TRANSFORM <int_value> (338)
    TRANSFORMS <int_value> (339)
    POINT <int_value> (340)
    POINTS <int_value> (341)
    PATH <int_value> (342)
    PATHS <int_value> (343)
    PICTURE <int_value> (344)
    PICTURES <int_value> (345)
    SONG <int_value> (346)
    SONGS <int_value> (347) 8
    SONG_VECTOR <int_value> (348) 17
    COUNT <int_value> (349) 13
    WRITE <int_value> (350)


Nonterminals, with rules where they appear

    $accept (96)
        on left: 0
    program (97)
        on left: 1
        on right: 0
    statement_list (98)
        on left: 2 3
        on right: 1 3
    statement (99)
        on left: 4 5 6 14 15
        on right: 3
    table_name <int_value> (100)
        on left: 7 8
        on right: 6
    modifier_list <int_value> (101)
        on left: 9 10 11
        on right: 6 11
    modifier <int_value> (102)
        on left: 12 13
        on right: 10 11
    item_vector <int_value> (103)
        on left: 16 17
        on right: 15
    sort_field_list <pointer_value> (104)
        on left: 18 19
        on right: 15 19
    sort_field <int_value> (105)
        on left: 20
        on right: 18 19


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (statement_list)

    program         go to state 1
    statement_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: statement_list . END
    3 statement_list: statement_list . statement

    SEMI_COLON  shift, and go to state 4
    INPUT       shift, and go to state 5
    END         shift, and go to state 6
    ENDINPUT    shift, and go to state 7
    QUERY       shift, and go to state 8
    SORT        shift, and go to state 9

    statement  go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   14 statement: SEMI_COLON .

    $default  reduce using rule 14 (statement)


State 5

    4 statement: INPUT . STRING

    STRING  shift, and go to state 11


State 6

    1 program: statement_list END .

    $default  reduce using rule 1 (program)


State 7

    5 statement: ENDINPUT .

    $default  reduce using rule 5 (statement)


State 8

    6 statement: QUERY . table_name modifier_list

    STARS  shift, and go to state 12
    SONGS  shift, and go to state 13

    table_name  go to state 14


State 9

   15 statement: SORT . item_vector BY sort_field_list

    STAR_VECTOR  shift, and go to state 15
    SONG_VECTOR  shift, and go to state 16

    item_vector  go to state 17


State 10

    3 statement_list: statement_list statement .

    $default  reduce using rule 3 (statement_list)


State 11

    4 statement: INPUT STRING .

    $default  reduce using rule 4 (statement)


State 12

    7 table_name: STARS .

    $default  reduce using rule 7 (table_name)


State 13

    8 table_name: SONGS .

    $default  reduce using rule 8 (table_name)


State 14

    6 statement: QUERY table_name . modifier_list

    LIMIT  shift, and go to state 18
    COUNT  shift, and go to state 19

    LIMIT     [reduce using rule 9 (modifier_list)]
    COUNT     [reduce using rule 9 (modifier_list)]
    $default  reduce using rule 9 (modifier_list)

    modifier_list  go to state 20
    modifier       go to state 21


State 15

   16 item_vector: STAR_VECTOR .

    $default  reduce using rule 16 (item_vector)


State 16

   17 item_vector: SONG_VECTOR .

    $default  reduce using rule 17 (item_vector)


State 17

   15 statement: SORT item_vector . BY sort_field_list

    BY  shift, and go to state 22


State 18

   12 modifier: LIMIT . INTEGER

    INTEGER  shift, and go to state 23


State 19

   13 modifier: COUNT . INTEGER

    INTEGER  shift, and go to state 24


State 20

    6 statement: QUERY table_name modifier_list .
   11 modifier_list: modifier_list . modifier

    LIMIT  shift, and go to state 18
    COUNT  shift, and go to state 19

    $default  reduce using rule 6 (statement)

    modifier  go to state 25


State 21

   10 modifier_list: modifier .

    $default  reduce using rule 10 (modifier_list)


State 22

   15 statement: SORT item_vector BY . sort_field_list

    APPROX_RANK_APPARENT_MAGNITUDE  shift, and go to state 26

    sort_field_list  go to state 27
    sort_field       go to state 28


State 23

   12 modifier: LIMIT INTEGER .

    $default  reduce using rule 12 (modifier)


State 24

   13 modifier: COUNT INTEGER .

    $default  reduce using rule 13 (modifier)


State 25

   11 modifier_list: modifier_list modifier .

    $default  reduce using rule 11 (modifier_list)


State 26

   20 sort_field: APPROX_RANK_APPARENT_MAGNITUDE .

    $default  reduce using rule 20 (sort_field)


State 27

   15 statement: SORT item_vector BY sort_field_list .
   19 sort_field_list: sort_field_list . sort_field

    APPROX_RANK_APPARENT_MAGNITUDE  shift, and go to state 26

    $default  reduce using rule 15 (statement)

    sort_field  go to state 29


State 28

   18 sort_field_list: sort_field .

    $default  reduce using rule 18 (sort_field_list)


State 29

   19 sort_field_list: sort_field_list sort_field .

    $default  reduce using rule 19 (sort_field_list)
