@q scanner.web                                                     @>
@q Created by Laurence D. Finston Wed 15 Sep 2021 07:40:57 AM CEST @>

@q * (1) Copyright and License. @>

@q This file is part of GNU 3DLDF, a package for three-dimensional drawing.  @>
@q Copyright (C) 2021 The Free Software Foundation, Inc. @>

@q GNU 3DLDF is free software; you can redistribute it and/or modify  @>
@q it under the terms of the GNU General Public License as published by  @>
@q the Free Software Foundation; either version 3 of the License, or  @>
@q (at your option) any later version.   @>

@q GNU 3DLDF is distributed in the hope that it will be useful,  @>
@q but WITHOUT ANY WARRANTY; without even the implied warranty of  @>
@q MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  @>
@q GNU General Public License for more details.   @>

@q You should have received a copy of the GNU General Public License  @>
@q along with GNU 3DLDF; if not, write to the Free Software  @>
@q Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA @>

@q GNU 3DLDF is a GNU package.   @>
@q It is part of the GNU Project of the   @>
@q Free Software Foundation  @>
@q and is published under the GNU General Public License.  @>
@q See the website http://www.gnu.org  @>
@q for more information.    @>
@q GNU 3DLDF is available for downloading from  @>
@q http://www.gnu.org/software/3dldf/LDF.html. @>

@q Please send bug reports to Laurence.Finston@gmx.de @>
@q The mailing list help-3dldf@gnu.org is available for people to  @>
@q ask other users for help.   @>
@q The mailing list info-3dldf@gnu.org is for sending  @>
@q announcements to users. To subscribe to these mailing lists, send an  @>
@q email with ``subscribe <email-address>'' as the subject.   @>

@q The author can be contacted at:     @>

@q Laurence D. Finston 		       @>
@q c/o Free Software Foundation, Inc.  @>
@q 51 Franklin St, Fifth Floor 	       @>
@q Boston, MA  02110-1301  	       @>
@q USA                                 @>                             

@q Laurence.Finston@gmx.de  @>


@q  * (1) Scanner.  @>
@* Scanner.
\initials{LDF 2021.08.15.}

@
@<Include files@>=

#include <stdlib.h>
#include <stdio.h>

#include <fstream>
#include <iomanip>
#include <ios>
#include <iostream>
#include <map>
#include <string>
#include <time.h>
#include <math.h>
#include <limits.h>

#include <sstream>   

#include <vector>
#include <deque>
#include <map>

// #include <stack>
// #include <set>

#if 0
#include <pthread.h>
#endif 

#include "../config.h"

#include <mysql.h>

#undef NAME_LEN
#undef LOCAL_HOST

using namespace std;

#include "parser.hxx"
#include "stars.hxx"
#include "classes.hxx"

@q  ** (2) Start conditions.  @>
@ Start conditions.

@<Start conditions@>=

@q  ** (2) Options.  @>
@ Options.

@<Options@>=
@=%option header-file="scanner.hxx"@>
@=%option bison-bridge@>
@=%option reentrant@>

@q ** (2) Name definitions.  @>
@ Name definitions.  
@<Name definitions@>=

@q * (1) Local variables for |yylex|.  @>
@ Local variables for {\bf yylex}.
\initials{LDF 2012.06.25.}

@<Local variables for |yylex|@>=

bool DEBUG = false;  /* |true|  */

@q ** (2) Code to be executed each time |yylex| is entered.  @>

@ Code to be executed each time {\bf yylex} is entered.  This code must be
indented or it causes an error when FLEX is run.  The start condition on entry
to {\bf yylex} can be set here.
\initials{LDF 2012.06.27.}

@<Execute on entry to |yylex|@>=

   cerr << "Entering `yylex'." << endl;

@q = Scan_Parse_Parameter_Type* param = static_cast<Scan_Parse_Parameter_Type*>(yyextra); @>
@q = if (scanner_trace == true) SCANNER_DEBUG = true;                                     @>

@q ** (2) Rules.  @>
@ Rules.

@q *** (3) Punctuation.  @>

@ Punctuation.

@q **** (4) Asterisk.  @>
@ Asterisk (\.{\*}).

@<Rules@>=
@=\* {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << " (asterisk)" << endl;

   }  /* |if (DEBUG)|  */

   return ASTERISK; 

@=}@>

@q **** (4) Semi-Colon.  @>
@ Semi-colon.

@<Rules@>=
@=; {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << " (semi-colon)" << endl;

   }  /* |if (DEBUG)|  */

   return SEMI_COLON; 

@=}@>

@q **** (4) Comma.  @>
@ Comma.

@<Rules@>=
@=\, {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << " (comma)" << endl;

   }  /* |if (DEBUG)|  */

   return COMMA; 

@=}@>

@q **** (4) Left parenthesis.  @>
@ Left parenthesis.

@<Rules@>=
@=\( {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << " (left parenthesis)" << endl;

   }  /* |if (DEBUG)|  */

   return LEFT_PARENTHESIS; 

@=}@>

@q **** (4) Right parenthesis.  @>
@ Right parenthesis.

@<Rules@>=
@=\) {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << " (right parenthesis)" << endl;

   }  /* |if (DEBUG)|  */

   return RIGHT_PARENTHESIS; 

@=}@>


@q **** ASC (ASCENDING) (4) @> 
@ ASC (ASCENDING)
@<Rules@>=
@=asc|ASC {@>

   return ASCENDING;   

@=}@>

@q **** DES (DESCENDING) (4) @> 
@ DES (DESCENDING)
@<Rules@>=
@=des|DES {@>

   return DESCENDING;

@=}@>

@q *** (3) INPUT.  @>
@ \.{INPUT}.

@<Rules@>=
@=INPUT|input {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;

   }  /* |if (DEBUG)|  */

   return INPUT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=OUTPUT|output {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return OUTPUT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=OUT|out {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return OUT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=IN|in {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return IN;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SORT|sort {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SORT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=STAR(\_|\ )VECTOR|star(\_|\ )vector {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return STAR_VECTOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=VECTOR|vector {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return VECTOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=APPEND|append {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return APPEND;

@=}@>

@q *** (3) END.  @>
@ END.

@<Rules@>=
@=END|end {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;

   }  /* |if (DEBUG)|  */

   return END;

@=}@>

@q *** (3) ENDINPUT.  @>
@ \.{ENDINPUT}.

@<Rules@>=
@=ENDINPUT|endinput {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;

   }  /* |if (DEBUG)|  */

   return ENDINPUT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SELECT|select {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;

   }  /* |if (DEBUG)|  */

   return SELECT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SHOW|show {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;

   }  /* |if (DEBUG)|  */

   return SHOW;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ALL|all {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ALL;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=FROM|from {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return FROM;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=\=\= {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return EQUAL;

@=}@>


@q *** (3) @>
@
@<Rules@>=
@=\!\=|\<\> {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NOT_EQUAL;

@=}@>


@q *** (3) @>
@
@<Rules@>=
@=NOT|not {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NOT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=\> {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GREATER_THAN;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=\>\= {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GREATER_THAN_OR_EQUAL;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=\< {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LESS_THAN;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=\<\= {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LESS_THAN_OR_EQUAL;

@=}@>


@q *** (3) @>
@
@<Rules@>=
@=AND|and {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return AND;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=OR|or {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return OR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=XOR|xor {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return XOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=NOT(\_|\ )AND|not(\_|\ )and {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NOT_AND;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=NOT(\_|\ )OR|not(\_|\ )or {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NOT_OR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=NOT(\_|\ )XOR|not(\_|\ )xor {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NOT_XOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=WHERE|where {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return WHERE;

@=}@>


@q *** (3) @>
@
@<Rules@>=
@=ORDER(\_|\ )BY|order(\_|\ )by {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ORDER_BY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=BY|by {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return BY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ASCENDING|ascending {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ASCENDING;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DESCENDING|descending {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DESCENDING;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=UNIQUE|unique {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return UNIQUE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=LIMIT|limit {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LIMIT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=OFFSET|offset {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return OFFSET;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ID|id {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ID;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=QUERY|query {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return QUERY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=APPROX(\_|\ )RANK(\_|\ )APPARENT(\_|\ )MAGNITUDE|approx(\_|\ )rank(\_|\ )apparent(\_|\ )magnitude {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return APPROX_RANK_APPARENT_MAGNITUDE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=APPROX|approx {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return APPROX;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RANK|rank {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RANK;

@=}@>


@q *** (3) @>
@
@<Rules@>=
@=APPARENT(\_|\ )MAGNITUDE|apparent(\_|\ )magnitude {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return APPARENT_MAGNITUDE;

@=}@>


@q *** (3) @>
@
@<Rules@>=
@=ABSOLUTE(\_|\ )MAGNITUDE|absolute(\_|\ )magnitude {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ABSOLUTE_MAGNITUDE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=APPARENT|apparent {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return APPARENT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ABSOLUTE|absolute {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ABSOLUTE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=MAGNITUDE|magnitude {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return MAGNITUDE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=APPARENT(\_|\ )MAGNITUDE(\_|\ )VARIES|apparent(\_|\ )magnitude(\_|\ )varies {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return APPARENT_MAGNITUDE_VARIES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ABSOLUTE(\_|\ )MAGNITUDE(\_|\ )VARIES|absolute(\_|\ )magnitude(\_|\ )varies {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ABSOLUTE_MAGNITUDE_VARIES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=VARIES|varies {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return VARIES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=IS(\_|\ )BINARY(\_|\ )COMPONENT|is(\_|\ )binary(\_|\ )component {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return IS_BINARY_COMPONENT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=IS(\_|\ )BINARY|is(\_|\ )binary {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return IS_BINARY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=IS(\_|\ )ECLIPSING(\_|\ )BINARY|is(\_|\ )eclipsing(\_|\ )binary {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return IS_ECLIPSING_BINARY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=IS(\_|\ )MULTIPLE|is(\_|\ )multiple {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return IS_MULTIPLE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=NOTES|notes {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NOTES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=IS|is {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return IS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=BINARY|binary {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return BINARY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=MULTIPLE|multiple {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return MULTIPLE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=COMMON(\_|\ )NAME|common(\_|\ )name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return COMMON_NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GREEK(\_|\ )NAME|greek(\_|\ )name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GREEK_NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=LATIN(\_|\ )NAME|latin(\_|\ )name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LATIN_NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ARABIC(\_|\ )NAME|arabic(\_|\ )name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ARABIC_NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=NAME|name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GREEK|greek {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GREEK;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=LATIN|latin {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LATIN;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ARABIC|arabic {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ARABIC;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GENITIVE|genitive {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GENITIVE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=FLAMSTEED(\_|\ )DESIGNATION(\_|\ )NUMBER|flamsteed(\_|\ )designation(\_|\ )number {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return FLAMSTEED_DESIGNATION_NUMBER;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=BAYER(\_|\ )DESIGNATION(\_|\ )GREEK(\_|\ )LETTER(\_|\ )TEX|bayer(\_|\ )designation(\_|\ )greek(\_|\ )letter(\_|\ )tex {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return BAYER_DESIGNATION_GREEK_LETTER_TEX;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=BAYER(\_|\ )DESIGNATION(\_|\ )GREEK(\_|\ )LETTER|bayer(\_|\ )designation(\_|\ )greek(\_|\ )letter {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return BAYER_DESIGNATION_GREEK_LETTER;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=BAYER(\_|\ )DESIGNATION(\_|\ )EXTENSION|bayer(\_|\ )designation(\_|\ )extension {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return BAYER_DESIGNATION_EXTENSION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=BS(\_|\ )HR(\_|\ )NUMBER|bs(\_|\ )hr(\_|\ )number {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return BS_HR_NUMBER;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=NUMBER|number {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return NUMBER;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DESIGNATION|designation {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DESIGNATION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ABBREVIATION|abbreviation {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ABBREVIATION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION(\_|\ )HOURS|right(\_|\ )ascension(\_|\ )hours {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION_HOURS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION(\_|\ )DECIMAL(\_|\ )HOURS|right(\_|\ )ascension(\_|\ )decimal(\_|\ )hours {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION_DECIMAL_HOURS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION(\_|\ )DECIMAL(\_|\ )DEGREES|right(\_|\ )ascension(\_|\ )decimal(\_|\ )degrees {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION_DECIMAL_DEGREES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION(\_|\ )DEGREES|right(\_|\ )ascension(\_|\ )degrees {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION_DEGREES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION(\_|\ )MINUTES|right(\_|\ )ascension(\_|\ )minutes {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION_MINUTES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION(\_|\ )SECONDS|right(\_|\ )ascension(\_|\ )seconds {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION_SECONDS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT(\_|\ )ASCENSION|right(\_|\ )ascension {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT_ASCENSION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DECLINATION(\_|\ )DECIMAL(\_|\ )DEGREES|declination(\_|\ )decimal(\_|\ )degrees {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DECLINATION_DECIMAL_DEGREES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DECLINATION(\_|\ )DEGREES|declination(\_|\ )degrees {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DECLINATION_DEGREES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DECLINATION(\_|\ )MINUTES|declination(\_|\ )minutes {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DECLINATION_MINUTES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DECLINATION(\_|\ )SECONDS|declination(\_|\ )seconds {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DECLINATION_SECONDS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=RIGHT|right {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return RIGHT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ASCENSION|ascension {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ASCENSION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DECLINATION|declination {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DECLINATION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ECLIPTIC|ecliptic {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ECLIPTIC;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=HOUR|hour {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return HOUR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=HOURS|hours {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return HOURS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=MINUTE|minute {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return MINUTE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=MINUTES|minutes {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return MINUTES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SECOND|second {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SECOND;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SECONDS|seconds {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SECONDS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DEGREES|degrees {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DEGREES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=DECIMAL|decimal {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return DECIMAL;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=STAR(\_|\ )CONSTANT(\_|\ )NAME|star(\_|\ )constant(\_|\ )name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return STAR_CONSTANT_NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTANT|constant {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTANT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=COMPARE|compare {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return COMPARE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=LOWEST|lowest {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LOWEST;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=HIGHEST|highest {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return HIGHEST;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=STAR|star {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return STAR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=STARS|stars {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return STARS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATION(\_|\ )VECTOR|constellation(\_|\ )vector {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATION_VECTOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATION(\_|\ )ABBREVIATION|constellation(\_|\ )abbreviation {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATION_ABBREVIATION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATION(\_|\ )NAME(\_|\ )GENITIVE|constellation(\_|\ )name(\_|\ )genitive {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATION_NAME_GENITIVE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATION(\_|\ )NUMBER|constellation(\_|\ )number {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATION_NUMBER;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATION(\_|\ )FULL(\_|\ )NAME|constellation(\_|\ )full(\_|\ )name {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATION_FULL_NAME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATION|constellation {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATION;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CONSTELLATIONS|constellations {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CONSTELLATIONS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PLANET|planet {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PLANET;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PLANET(\_|\ )VECTOR|planet(\_|\ )vector {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PLANET_VECTOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PLANETS|planets {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PLANETS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SIDEREAL(\_|\ )TIME|sidereal(\_|\ )time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SIDEREAL_TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=UNIVERSAL(\_|\ )TIME|universal(\_|\ )time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return UNIVERSAL_TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GREENWICH(\_|\ )TIME|greenwich(\_|\ )time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GREENWICH_TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=LOCAL(\_|\ )TIME|local(\_|\ )time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LOCAL_TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SOLAR(\_|\ )TIME|solar(\_|\ )time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SOLAR_TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=MEDIAN(\_|\ )SOLAR(\_|\ )TIME|median(\_|\ )solar(\_|\ )time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return MEDIAN_SOLAR_TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=TIME|time {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return TIME;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SIDEREAL|sidereal {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SIDEREAL;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=UNIVERSAL|universal {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return UNIVERSAL;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GREENWICH|greenwich {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GREENWICH;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=LOCAL|local {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return LOCAL;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SOLAR|solar {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SOLAR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=TRANSFORM|transform {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return TRANSFORM;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=TRANSFORMS|transforms {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return TRANSFORMS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=POINT|point {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return POINT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=POINTS|points {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return POINTS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PATH|path {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PATH;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PATHS|paths {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PATHS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PICTURE|picture {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PICTURE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PICTURES|pictures {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PICTURES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SONG(\_|\ )VECTOR|song(\_|\ )vector {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SONG_VECTOR;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SONG|song {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SONG;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SONGS|songs {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SONGS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=COUNT|count {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return COUNT;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=FILE|file {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return FILE_YY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=WRITE|write {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return WRITE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=OPEN|open {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return OPEN;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CLOSE|close {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CLOSE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CLOSED|closed {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CLOSED;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=TAXONOMY|taxonomy {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return TAXONOMY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=KINGDOMS|kingdoms {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return KINGDOMS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=KINGDOM|kingdom {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return KINGDOM;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PHYLUM|phylum {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PHYLUM;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PHYLA|phyla {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return PHYLA;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CLASSES|classes {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CLASSES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=CLASS|class {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return CLASS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ORDERS|orders {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ORDERS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=ORDER|order {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return ORDER;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=FAMILIES|families {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return FAMILIES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=FAMILY|family {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return FAMILY;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GENERA|genera {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GENERA;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=GENUS|genus {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return GENUS;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=SPECIES|species {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }

   return SPECIES;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=PAUSE|pause {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }  

   return PAUSE;

@=}@>

@q *** (3) @>
@
@<Rules@>=
@=\- {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  " << yytext << endl;
   }  

   return MINUS;

@=}@>

@q *** (3) INTEGER @>

@ \.{INTEGER}.  

@<Rules@>=
@=[0-9]+ {@>

   yylval->int_value = atoi(yytext);   
 
   if (DEBUG)
   {
       cerr << "In `yylex':  INTEGER == " << yylval->int_value
            << endl
            << "Returning `INTEGER'."
            << endl;
   }  

   return INTEGER;

@=}@>

@q *** (3) BOOL @>
@ 
@<Rules@>=
@=TRUE|true {@>

   yylval->bool_value = true;
 
   if (DEBUG)
   {
       cerr << "In `yylex':  BOOL == true"
            << endl
            << "Returning `BOOL'."
            << endl;
   }  

   return BOOL;

@=}@>

@ 
@<Rules@>=
@=FALSE|false {@>

   yylval->bool_value = false;
 
   if (DEBUG)
   {
       cerr << "In `yylex':  BOOL == false"
            << endl
            << "Returning `BOOL'."
            << endl;
   }  

   return BOOL;

@=}@>

@q *** (3) FLOAT @>

@ \.{FLOAT}.  

@<Rules@>=
@=([0-9]+\.[0-9]*)|([0-9]*\.[0-9]+) {@>

   yylval->float_value = atof(yytext);   
 
   if (DEBUG)
   {
       cerr << "In `yylex':  FLOAT == " << yylval->float_value
            << endl
            << "Returning `FLOAT'."
            << endl;
   }  

   return FLOAT;

@=}@>

@q *** (3) ditto.  @>
@ ditto (double-quote character as string).

@<Rules@>=
@=ditto|DITTO|Ditto {@>

   strcpy(yylval->string_value, "\"");

 
   if (DEBUG)
   {
       cerr << "In `yylex':  ditto == " << yytext
            << endl
            << "Returning `STRING'."
            << endl;

   }  

   return STRING;

@=}@>

@q *** (3) Comments.  @>
@ Comments.  

@<Rules@>=
@=(%|#).*$ {@>

   if (DEBUG)
   {
      cerr << "In `yylex':  Comment: " << yytext << endl;
     
   }  /* |if (DEBUG)|  */

   /* Ignore  */

@=}@>

@q *** (3) Whitespace.  @>
@ Whitespace.

@<Rules@>=
@=[[:space:]\x0d]+ {@>

   if (DEBUG)
   {
       cerr << "In `yylex':  Whitespace." << endl;

   }  /* |if (DEBUG)|  */

@=}@>

@q *** (3) Undelimited string:  "...".  @>
@ Undelimited string.

@<Rules@>=
@=[[:alnum:]./~@@+\?$][[:alnum:]./\_~+@@\?$]* {@>

   strcpy(yylval->string_value, yytext);

 
   if (DEBUG)
   {
       cerr << "In `yylex':  Undelimited string == " << yytext
            << endl
            << "Returning `STRING'."
            << endl;

   }  

   return STRING;

@=}@>

@q *** (3) Delimited string:  "...".  @>
@ Delimited string:  \.{\char`\"}$\ldots$\.{\char`\"}.  

@<Rules@>=
@=\"[^\"]*\" {@>

   string temp_str = yytext;

   string::size_type s = temp_str.size();

   temp_str.erase(0, 1);
   temp_str.erase(s - 2, s - 1);

   size_t pos = string::npos;

 
   if (DEBUG)
   {
       cerr << "In `yylex':  Delimited string == " << yytext
            << endl
            << "Returning `STRING'."
            << endl;
   }  

   strcpy(yylval->string_value, temp_str.c_str());
  
   return STRING;

@=}@>

@q ** (2) Additional functions.  @>

@ Additional functions.

@<|yywrap| definition@>=

int
yywrap(yyscan_t parameter)
{

    cerr << "Entering `yywrap'." << endl;

    return 1;
}

@
@<|yyerror| definition@>=

int
yyerror(void* v, char const* s)
{
    cerr << "Entering `yyerror'." << endl;

    return 0;
}

@ Putting scanner together.
@c
@=%{@>
typedef float real;
class Scanner_Type;
typedef Scanner_Type *Scanner_Node;
@<Include files@>@;@/
@=%}@>
@<Start conditions@>@;@/
@<Options@>@;@/
@<Name definitions@>@;@/
@=%%@>
@=%{@>
@<Local variables for |yylex|@>@;@/
@=%}@>
@<Execute on entry to |yylex|@>@;@/
@q Rules @>
@<Rules@>@;@/
@=%%@>
@q User code@>
@<|yywrap| definition@>@;@/
@<|yyerror| definition@>@;@/

 
@q * (1) Emacs-Lisp code for use in indirect buffers  @>

@q (progn (cweb-mode) (outline-minor-mode))           @>

@q * (1) Local variables for Emacs @>

@q * Local variables for Emacs.@>
@q Local Variables: @>
@q mode:CWEB @>
@q eval:(display-time) @>
@q abbrev-mode:t @>
@q eval:(read-abbrev-file) @>
@q indent-tabs-mode:nil @>
@q eval:(outline-minor-mode) @>
@q fill-column:80 @>
@q End: @>

